{"version":3,"file":"k-accordion.f18cc5f7.js","sources":["../../src/components/data-display/k-accordion/k-accordion.vue"],"sourcesContent":["<template>\n    <div :id=\"accordionId\" class=\"k-accordion\">\n        <slot></slot>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import { uid } from '@/helpers/utils'\n    import {\n        Accordion,\n        AccordionInterface,\n        AccordionItem,\n        AccordionOptions\n    } from 'flowbite'\n    import { defineComponent, onMounted, ref, Ref } from 'vue'\n\n    export default defineComponent({\n        name: 'KAccordion',\n        props: {\n            classes: {\n                type: String,\n                default: ''\n            },\n            activeClasses: {\n                type: String,\n                default:\n                    'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white'\n            },\n            inactiveClasses: {\n                type: String,\n                default: 'text-gray-500 dark:text-gray-400'\n            },\n            alwaysOpen: {\n                type: Boolean,\n                default: false\n            }\n        },\n        setup(props) {\n            const accordionId = uid()\n\n            const init = () => {\n                const accordion: Ref<AccordionInterface | null> = ref(null)\n\n                const getAccordionItems = () => {\n                    const items: AccordionItem[] = []\n\n                    const accordionTriggers = document.querySelectorAll(\n                        `#${accordionId} [data-accordion-trigger]`\n                    )\n\n                    accordionTriggers.forEach((trigger) => {\n                        const triggerId = trigger.getAttribute('id')\n                        const targetId = trigger.getAttribute(\n                            'data-accordion-scope'\n                        )\n\n                        if (triggerId && targetId) {\n                            const triggerEl = document.getElementById(triggerId)\n                            const targetEl = document.getElementById(targetId)\n                            const open =\n                                trigger.getAttribute('data-accordion-open') ===\n                                'true'\n                                    ? true\n                                    : false || false\n\n                            if (triggerEl && targetEl) {\n                                items.push({\n                                    id: triggerId,\n                                    triggerEl: triggerEl,\n                                    targetEl: targetEl,\n                                    active: open\n                                })\n                            }\n                        }\n                    })\n\n                    return items\n                }\n\n                const options: AccordionOptions = {\n                    alwaysOpen: false,\n                    activeClasses: `${props.activeClasses}`,\n                    inactiveClasses: `${props.inactiveClasses}`\n                    // onOpen: (item) => {\n                    //     console.log('accordion item has been shown')\n                    //     console.log(item)\n                    // },\n                    // onClose: (item) => {\n                    //     console.log('accordion item has been hidden')\n                    //     console.log(item)\n                    // },\n                    // onToggle: (item) => {\n                    //     console.log('accordion item has been toggled')\n                    //     console.log(item)\n                    // }\n                }\n\n                const accordionItems = getAccordionItems()\n\n                accordion.value = new Accordion(accordionItems, options)\n            }\n\n            onMounted(() => {\n                init()\n            })\n\n            return { accordionId }\n        }\n    })\n</script>\n\n<style scoped></style>\n"],"names":["_sfc_main","defineComponent","props","accordionId","uid","init","__name","accordion","ref","getAccordionItems","items","trigger","triggerId","targetId","triggerEl","targetEl","open","options","accordionItems","Accordion","onMounted","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock"],"mappings":"2SAgBI,MAAAA,EAAeC,EAAgB,CAC3B,KAAM,aACN,MAAO,CACH,QAAS,CACL,KAAM,OACN,QAAS,EACb,EACA,cAAe,CACX,KAAM,OACN,QACI,4DACR,EACA,gBAAiB,CACb,KAAM,OACN,QAAS,kCACb,EACA,WAAY,CACR,KAAM,QACN,QAAS,EACb,CACJ,EACA,MAAMC,EAAO,CACT,MAAMC,EAAcC,IAEdC,EAAOC,EAAA,IAAM,CACT,MAAAC,EAA4CC,EAAI,IAAI,EAEpDC,EAAoBH,EAAA,IAAM,CAC5B,MAAMI,EAAyB,CAAA,EAMb,OAJQ,SAAS,iBAC/B,IAAIP,4BAAA,EAGU,QAASQ,GAAY,CAC7B,MAAAC,EAAYD,EAAQ,aAAa,IAAI,EACrCE,EAAWF,EAAQ,aACrB,sBAAA,EAGJ,GAAIC,GAAaC,EAAU,CACjB,MAAAC,EAAY,SAAS,eAAeF,CAAS,EAC7CG,EAAW,SAAS,eAAeF,CAAQ,EAC3CG,EACFL,EAAQ,aAAa,qBAAqB,IAC1C,OAIAG,GAAaC,GACbL,EAAM,KAAK,CACP,GAAIE,EACJ,UAAAE,EACA,SAAAC,EACA,OAAQC,CAAA,CACX,CAET,CAAA,CACH,EAEMN,CAAA,EAjCe,qBAoCpBO,EAA4B,CAC9B,WAAY,GACZ,cAAe,GAAGf,EAAM,gBACxB,gBAAiB,GAAGA,EAAM,iBAAA,EAexBgB,EAAiBT,IAEvBF,EAAU,MAAQ,IAAIY,EAAUD,EAAgBD,CAAO,CAAA,EA3D9C,QA8Db,OAAAG,EAAU,IAAM,CACPf,GAAA,CACR,EAEM,CAAE,YAAAF,CAAY,CACzB,CACJ,CAAC,oBA3GSkB,EAAWC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CAAO,OAAAC,EAAA,EAAcC,EAAA,MAAA,CAAA,GAAAP,EAAA,YACtC,MAAA,aAAA,EAAA,6BADMhB,EAAAe,EAAA"}