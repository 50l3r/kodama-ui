{"version":3,"file":"k-dropzone.bf54cd33.js","sources":["../../src/components/data-entry/k-dropzone/k-dropzone.vue"],"sourcesContent":["<template>\n    <div class=\"k-dropzone\">\n        <label\n            :for=\"id\"\n            :class=\"{\n                'k-dropzone--loading': loading,\n                'k-dropzone--error': errors.length > 0,\n                'k-dropzone--disabled': disabled\n            }\"\n            :style=\"{\n                'background': isModelValueImage\n                    ? `url('${modelValue}') no-repeat center center`\n                    : '',\n                'background-size': 'cover'\n            }\"\n        >\n            <div\n                v-if=\"modelValue || loading\"\n                class=\"flex flex-col max-w-full items-center justify-center pt-5 pb-6\"\n            >\n                <k-button\n                    v-if=\"!loading\"\n                    size=\"xs\"\n                    icon=\"times\"\n                    color=\"gray\"\n                    class=\"absolute top-0 right-0 m-2 z-20\"\n                    @click=\"onFileReset(true)\"\n                >\n                </k-button>\n\n                <div\n                    v-if=\"loading\"\n                    class=\"absolute top-0 left-0 h-full w-full bg-opacity-60 bg-gray-900 z-20 flex items-center justify-center text-white\"\n                >\n                    <k-icon icon=\"spinner-third\" type=\"fas\" :size=\"30\" spin />\n                </div>\n                <div\n                    class=\"text-sm flex justify-center max-w-full flex-col font-semibold text-center uppercase z-10 absolute top-0 left-0 bg-gray-100 dark:bg-gray-900 bg-opacity-50 dark:bg-opacity-50 w-full h-full\"\n                >\n                    <k-icon\n                        icon=\"file\"\n                        type=\"far\"\n                        :size=\"60\"\n                        class=\"mb-3 text-gray-800 dark:text-gray-100\"\n                    />\n\n                    <div\n                        v-if=\"file.name\"\n                        class=\"text-xs flex text-center flex-col px-5 whitespace-nowrap w-full\"\n                    >\n                        <span\n                            class=\"uppercase text-ellipsis overflow-hidden text-gray-800 dark:text-gray-100 px-3\"\n                        >\n                            {{ file.name }}\n                        </span>\n                        <span\n                            class=\"font-semibold text-gray-700 dark:text-gray-300\"\n                        >\n                            {{ file.size }}MB\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div\n                v-else\n                class=\"flex flex-col items-center justify-center pt-5 pb-6\"\n            >\n                <k-tooltip v-if=\"errors.length > 0\">\n                    <template #content>\n                        <div class=\"text-center\">\n                            {{ errors[0] }}\n                        </div>\n                    </template>\n\n                    <k-icon\n                        icon=\"triangle-exclamation\"\n                        type=\"far\"\n                        :size=\"30\"\n                        class=\"text-danger mb-3\"\n                    />\n                </k-tooltip>\n                <k-icon\n                    v-else\n                    icon=\"upload\"\n                    type=\"far\"\n                    :size=\"30\"\n                    class=\"text-gray-400 mb-3\"\n                />\n\n                <p\n                    class=\"mb-2 text-sm text-gray-500 dark:text-gray-400 text-center\"\n                >\n                    <span class=\"font-semibold\">Haz click</span> o arrastra tus\n                    ficheros\n                </p>\n                <p class=\"text-xs text-gray-500 dark:text-gray-400\">\n                    <slot v-if=\"hasSlot('default')\"> {{ maxSize }} MB </slot>\n                    <template v-else>\n                        <div class=\"flex text-center flex-col\">\n                            <div class=\"uppercase\">\n                                {{ textensions }}\n                            </div>\n                            <div class=\"font-semibold\">\n                                ({{ maxSize }}MB MAX)\n                            </div>\n                        </div>\n                    </template>\n                </p>\n            </div>\n            <input\n                :id=\"id\"\n                type=\"file\"\n                class=\"hidden\"\n                :accept=\"validExtensions\"\n                :disabled=\"disabled\"\n                @change=\"onFileChange($event)\"\n            />\n        </label>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import { uid } from '@/helpers/utils'\n    import { computed, defineComponent, ref } from 'vue'\n\n    export default defineComponent({\n        name: 'KDropzone',\n        props: {\n            modelValue: {\n                type: String,\n                default: ''\n            },\n            maxSize: {\n                type: Number,\n                default: 5\n            },\n            accept: {\n                type: Array as () => string[],\n                default: () => ['jpg', 'jpeg', 'png', 'gif', 'webp', 'pdf']\n            },\n            removable: {\n                type: Boolean,\n                default: true\n            },\n            loading: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        emits: ['delete', 'upload', 'update:modelValue'],\n        setup(props, ctx) {\n            const id = uid()\n            const hasSlot = (name: string) => !!ctx.slots[name]\n            const errors = ref<string[]>([])\n\n            const file = ref({\n                name: '',\n                size: 0,\n                type: '',\n                fileExtention: '',\n                url: '',\n                isImage: false\n            })\n\n            const validExtensions = computed(() => {\n                return props.accept\n                    .map((ext) => '.' + ext.toLowerCase())\n                    .join(',')\n            })\n\n            const textensions = computed(() => {\n                return props.accept.map((ext) => ext.toLowerCase()).join(', ')\n            })\n\n            const isModelValueImage = computed(() => {\n                // tramp\n                return true\n\n                //check base64 file type\n                if (props.modelValue.includes('data:image')) {\n                    return true\n                }\n\n                // check url\n                const ext = props.modelValue.split('.').pop() || ''\n                if (\n                    ['jpg', 'jpeg', 'png', 'gif', 'webp', 'svg'].includes(ext)\n                ) {\n                    return true\n                }\n\n                return false\n            })\n\n            const onFileChange = (e: any) => {\n                if (e.target.files && e.target.files[0]) {\n                    errors.value = []\n\n                    const efile = e.target.files[0]\n\n                    if (isFileValid(efile)) {\n                        // Get file size\n                        const fileSize =\n                            Math.round((efile.size / 1024 / 1024) * 100) / 100\n\n                        // Get file extension\n                        const fileExtention = efile.name.split('.').pop()\n\n                        // Get file name\n                        const fileName = efile.name.split('.').shift()\n\n                        // Check if file is an image\n                        const isImage = [\n                            'jpg',\n                            'jpeg',\n                            'png',\n                            'gif',\n                            'webp',\n                            'svg'\n                        ].includes(fileExtention)\n\n                        let reader = new FileReader()\n                        reader.readAsDataURL(efile)\n                        reader.onload = function () {\n                            // Set file data\n                            file.value = {\n                                name: fileName,\n                                size: fileSize,\n                                type: efile.type,\n                                fileExtention: fileExtention,\n                                isImage: isImage,\n                                url: reader.result\n                                    ? reader.result.toString()\n                                    : ''\n                            }\n\n                            ctx.emit('update:modelValue', file.value.url)\n                            ctx.emit('upload', efile)\n                        }\n                    } else {\n                        onFileReset(false)\n                    }\n                }\n            }\n\n            const onFileReset = (clearErrors = false) => {\n                file.value = {\n                    name: '',\n                    size: 0,\n                    type: '',\n                    fileExtention: '',\n                    url: '',\n                    isImage: false\n                }\n\n                ctx.emit('update:modelValue', '')\n                ctx.emit('delete')\n\n                if (clearErrors) {\n                    errors.value = []\n                }\n            }\n\n            const isFileSizeValid = (fileSize: number) => {\n                if (fileSize > props.maxSize) {\n                    errors.value.push(\n                        `El fichero debe pesar menos de ${props.maxSize} MB`\n                    )\n                }\n            }\n\n            const isFileTypeValid = (fileExtension: string) => {\n                if (!props.accept.includes(fileExtension)) {\n                    errors.value.push(\n                        `Extensión inválida. Los ficheros soportados son: ${props.accept}`\n                    )\n                }\n            }\n\n            const isFileValid = (file: File) => {\n                isFileSizeValid(\n                    Math.round((file.size / 1024 / 1024) * 100) / 100\n                )\n\n                isFileTypeValid(file.name.split('.').pop() || '')\n\n                if (errors.value.length === 0) {\n                    return true\n                } else {\n                    return false\n                }\n            }\n\n            return {\n                id,\n                file,\n                hasSlot,\n                validExtensions,\n                textensions,\n                onFileChange,\n                errors,\n                onFileReset,\n                isModelValueImage\n            }\n        }\n    })\n</script>\n\n<style scoped lang=\"scss\">\n    .k-dropzone {\n        @apply flex items-center justify-center w-full;\n\n        > label {\n            @apply flex flex-col items-center justify-center w-full h-64 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50  dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600 relative select-none overflow-hidden p-4 aspect-square;\n        }\n\n        > label.k-dropzone--loading {\n            @apply bg-gray-100 dark:bg-gray-700;\n        }\n\n        > label.k-dropzone--error {\n            @apply border-red-500 dark:border-red-500;\n        }\n\n        > label.k-dropzone--disabled {\n            @apply opacity-40 cursor-not-allowed;\n        }\n    }\n</style>\n"],"names":["_sfc_main","defineComponent","props","ctx","id","uid","hasSlot","__name","name","errors","ref","file","validExtensions","computed","ext","textensions","isModelValueImage","onFileChange","e","efile","isFileValid","fileSize","fileExtention","fileName","isImage","reader","onFileReset","clearErrors","isFileSizeValid","isFileTypeValid","fileExtension","_hoisted_3","_hoisted_4","_hoisted_6","_hoisted_9","_withScopeId","_createElementVNode","_createTextVNode","_hoisted_13","_component_k_tooltip","_resolveComponent","_openBlock","_createElementBlock","_hoisted_1","_ctx","_createCommentVNode","_createBlock","_component_k_button","_createVNode","_component_k_icon","_hoisted_5","_hoisted_7","_toDisplayString","_withCtx","_hoisted_10","_hoisted_11","_hoisted_12","_renderSlot","_hoisted_14"],"mappings":"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"}