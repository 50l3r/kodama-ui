{"version":3,"file":"k-avatar.57e99185.js","sources":["../../src/components/data-display/k-avatar/k-avatar.types.ts","../../src/components/data-display/k-avatar/k-avatar.props.ts","../../src/components/data-display/k-avatar/parts/eyes.vue","../../src/components/data-display/k-avatar/parts/eye-brows.vue","../../src/components/data-display/k-avatar/parts/beard.vue","../../src/components/data-display/k-avatar/parts/face.vue","../../src/components/data-display/k-avatar/parts/ear.vue","../../src/components/data-display/k-avatar/parts/earring.vue","../../src/components/data-display/k-avatar/parts/mouth.vue","../../src/components/data-display/k-avatar/parts/hair.vue","../../src/components/data-display/k-avatar/parts/nose.vue","../../src/components/data-display/k-avatar/parts/glasses.vue","../../src/components/data-display/k-avatar/parts/shirt.vue","../../src/components/data-display/k-avatar/lib/makeup.ts","../../src/components/data-display/k-avatar/k-avatar.vue"],"sourcesContent":["// FACE\nexport const FACE_COLORS = ['#F9C9B6', '#AC6651', '#E28129']\n\n// EYES\nexport const EYES = ['circle', 'oval', 'smile', 'shadow']\nexport const EYEBROWS = [\n    'none',\n    'eyebrows-up',\n    'eyebrows-down',\n    'eyelashes-down',\n    'eyelashes-up'\n]\nexport const GLASSES = ['none', 'round', 'square']\n\n// EARS\nexport const EAR = ['small', 'big']\nexport const EARRING = ['none', 'stud', 'hoop']\n\n// MOUTH\nexport const MOUTH = [\n    'frown',\n    'laughing',\n    'nervous',\n    'pucker',\n    'sad',\n    'smile',\n    'smirk',\n    'suprised'\n]\nexport const BEARD = ['none'] //['none', 'hipster', 'scruff']\nexport const BEARD_COLORS = ['#3E2AF7', '#31E0C0', '#000']\n\n// HAIR\nexport const HAIR = [\n    'none',\n    'danny-phantom',\n    'doug-funny',\n    'fonza',\n    'full',\n    'mr-clean',\n    'mr-t',\n    'pixie',\n    'turban'\n]\nexport const HAIR_COLORS = [\n    '#F02A5A',\n    '#3E2AF7',\n    '#31E0C0',\n    '#B6FA2D',\n    '#EDA128',\n    '#000'\n]\n\n// NOSE\nexport const NOSE = ['curve', 'pointed', 'round']\n\n// SHIRT\nexport const SHIRT = ['collared', 'crew', 'open']\nexport const SHIRT_COLORS = [\n    '#F02A5A',\n    '#3E2AF7',\n    '#31E0C0',\n    '#B6FA2D',\n    '#EDA128',\n    '#000'\n]\n\n// BGCOLOR\nexport const BG_COLORS = [\n    '#9287FF',\n    '#6BD9E9',\n    '#FC909F',\n    '#F4D150',\n    '#E0DDFF',\n    '#D2EFF3',\n    '#FFEDEF',\n    '#FFEBA4',\n    '#506AF4',\n    '#F48150',\n    '#74D153'\n]\n\n// export const BEARD_COLORS = ['#BB9E95', '#65473E']\n\n// export const HAIR_COLORS = ['#77311D', '#FC909F', '#D2EFF3', '#506AF4', '#F48150']\n\n// export const BG_COLORS = [\n//     '#9287FF',\n//     '#6BD9E9',\n//     '#FC909F',\n//     '#F4D150',\n//     '#E0DDFF',\n//     '#D2EFF3',\n//     '#FFEDEF',\n//     '#FFEBA4',\n//     '#506AF4',\n//     '#F48150',\n//     '#74D153'\n// ]\n\n// export const SHIRT_COLORS = ['#9287FF', '#6BD9E9', '#FC909F', '#F4D150', '#77311D']\n\n// export const FACE_COLORS = ['#F9C9B6', '#AC6651']\n","import {\n    EYES,\n    EYEBROWS,\n    EAR,\n    EARRING,\n    MOUTH,\n    HAIR,\n    NOSE,\n    GLASSES,\n    BEARD,\n    SHIRT,\n    BG_COLORS,\n    HAIR_COLORS,\n    BEARD_COLORS,\n    SHIRT_COLORS,\n    FACE_COLORS\n} from './k-avatar.types'\n\nexport default {\n    size: {\n        default: 120,\n        type: Number\n    },\n    bgColor: {\n        default: BG_COLORS[0],\n        type: String\n    },\n    faceColor: {\n        default: FACE_COLORS[0],\n        type: String,\n        validator: function (value: string) {\n            return FACE_COLORS.includes(value)\n        }\n    },\n    eye: {\n        default: EYES[0],\n        type: String,\n        validator: function (value: string) {\n            return EYES.includes(value)\n        }\n    },\n    eyeBrow: {\n        default: EYEBROWS[0],\n        type: String,\n        validator: function (value: string) {\n            return EYEBROWS.includes(value)\n        }\n    },\n    ear: {\n        default: EAR[0],\n        type: String,\n        validator: function (value: string) {\n            return EAR.includes(value)\n        }\n    },\n    earring: {\n        default: EARRING[0],\n        type: String,\n        validator: function (value: string) {\n            return EARRING.includes(value)\n        }\n    },\n    mouth: {\n        default: MOUTH[0],\n        type: String,\n        validator: function (value: string) {\n            return MOUTH.includes(value)\n        }\n    },\n    hair: {\n        default: HAIR[0],\n        type: String,\n        validator: function (value: string) {\n            return HAIR.includes(value)\n        }\n    },\n    nose: {\n        default: NOSE[0],\n        type: String,\n        validator: function (value: string) {\n            return NOSE.includes(value)\n        }\n    },\n    glasses: {\n        default: GLASSES[0],\n        type: String,\n        validator: function (value: string) {\n            return GLASSES.includes(value)\n        }\n    },\n    beard: {\n        default: BEARD[0],\n        type: String,\n        validator: function (value: string) {\n            return BEARD.includes(value)\n        }\n    },\n    hairColor: {\n        default: HAIR_COLORS[0],\n        type: String,\n        validator: function (value: string) {\n            return HAIR_COLORS.includes(value)\n        }\n    },\n    beardColor: {\n        default: BEARD_COLORS[0],\n        type: String,\n        validator: function (value: string) {\n            return BEARD_COLORS.includes(value)\n        }\n    },\n    shirtColor: {\n        default: SHIRT_COLORS[0],\n        type: String,\n        validator: function (value: string) {\n            return SHIRT_COLORS.includes(value)\n        }\n    },\n    shirt: {\n        default: SHIRT[0],\n        type: String,\n        validator: function (value: string) {\n            return SHIRT.includes(value)\n        }\n    }\n}\n","<template>\n    <g>\n        <template v-if=\"eye === 'circle'\">\n            <ellipse\n                cx=\"168.117\"\n                cy=\"167.927\"\n                rx=\"9\"\n                ry=\"10\"\n                transform=\"rotate(-6.77646 168.117 167.927)\"\n                fill=\"black\"\n            />\n            <ellipse\n                cx=\"232.149\"\n                cy=\"157.923\"\n                rx=\"9\"\n                ry=\"10\"\n                transform=\"rotate(-6.27568 232.149 157.923)\"\n                fill=\"black\"\n            />\n        </template>\n\n        <template v-else-if=\"eye === 'oval'\">\n            <ellipse\n                cx=\"168.53\"\n                cy=\"168.402\"\n                rx=\"9\"\n                ry=\"13.5\"\n                transform=\"rotate(-6.77646 168.53 168.402)\"\n                fill=\"black\"\n            />\n            <ellipse\n                cx=\"232.531\"\n                cy=\"158.402\"\n                rx=\"9\"\n                ry=\"13.5\"\n                transform=\"rotate(-6.27568 232.531 158.402)\"\n                fill=\"black\"\n            />\n        </template>\n\n        <template v-else-if=\"eye === 'smile'\">\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M157.287 173.073C157.401 173.886 158.434 174.067 159.009 173.481C161.474 170.965 165.264 169.116 169.663 168.594C172.258 168.285 174.754 168.475 176.979 169.066C177.733 169.266 178.474 168.629 178.21 167.895C176.545 163.25 171.845 160.196 166.736 160.803C160.794 161.509 156.55 166.898 157.256 172.839C157.266 172.917 157.276 172.995 157.287 173.073Z\"\n                fill=\"black\"\n            />\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M221.385 163.073C221.498 163.886 222.531 164.067 223.106 163.482C225.549 160.996 229.298 159.17 233.648 158.653C236.213 158.348 238.68 158.535 240.88 159.117C241.634 159.316 242.375 158.679 242.111 157.946C240.456 153.352 235.804 150.335 230.748 150.935C224.862 151.635 220.658 156.973 221.357 162.859C221.366 162.93 221.375 163.002 221.385 163.073Z\"\n                fill=\"black\"\n            />\n        </template>\n\n        <template v-else-if=\"eye === 'shadow'\">\n            <circle\n                cx=\"167.24\"\n                cy=\"159.239\"\n                r=\"12\"\n                transform=\"rotate(-6.27568 167.24 159.239)\"\n                fill=\"#D2EFF3\"\n            />\n            <ellipse\n                cx=\"168.53\"\n                cy=\"168.402\"\n                rx=\"9\"\n                ry=\"13.5\"\n                transform=\"rotate(-6.77646 168.53 168.402)\"\n                fill=\"black\"\n            />\n            <circle\n                cx=\"231.019\"\n                cy=\"150.61\"\n                r=\"12\"\n                transform=\"rotate(-6.27568 231.019 150.61)\"\n                fill=\"#D2EFF3\"\n            />\n            <ellipse\n                cx=\"232.531\"\n                cy=\"158.402\"\n                rx=\"9\"\n                ry=\"13.5\"\n                transform=\"rotate(-6.27568 232.531 158.402)\"\n                fill=\"black\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Eye',\n        props: {\n            eye: props.eye\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"eyeBrow === 'eyebrows-down'\">\n            <path\n                d=\"M147 148.5C153.167 151 168.1 151.5 178.5 133.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M214 126C219.167 131.333 232.1 138.8 242.5 126\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n        </template>\n\n        <template v-else-if=\"eyeBrow === 'eyebrows-up'\">\n            <path\n                d=\"M219 132.214C224.667 129.548 238 127.114 246 138.714\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M143.579 157.521C145.65 151.61 153.261 140.396 167.142 142.822\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n        </template>\n\n        <template v-else-if=\"eyeBrow === 'eyelashes-down'\">\n            <path\n                d=\"M147 148.5C153.167 151 168.1 151.5 178.5 133.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M214 126C219.167 131.333 232.1 138.8 242.5 126\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M157.148 148.458L151 143.031\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M236.219 131.444L238.004 123.439\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M165.597 144.814L161.551 137.682\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M228.142 131.018L229.08 122.871\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M172.674 139.201L170.473 131.301\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M219.993 130.031L219.217 121.867\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n        </template>\n\n        <template v-else-if=\"eyeBrow === 'eyelashes-up'\">\n            <path\n                d=\"M219 132.214C224.667 129.548 238 127.114 246 138.714\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M143.579 157.521C145.65 151.61 153.261 140.396 167.142 142.822\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M146.074 151.458L139.926 146.031\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M242.961 133.157L249.109 127.73\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M152.523 145.814L148.477 138.682\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M235.512 129.513L239.559 122.381\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M160.599 142.201L158.398 134.301\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M226.436 128.9L228.637 121\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'EyeBrow',\n        props: {\n            eyeBrow: props.eyeBrow\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"beard === 'hipster'\">\n            <path\n                d=\"M270.126 194.455C279.615 234.059 255.201 273.857 215.597 283.345C192.29 288.93 168.916 282.772 151.692 268.687C134.5 252.801 130.5 201.301 126.692 176.95C140.692 208.451 176.316 210.895 210.192 204.951C238.692 199.951 261.491 198.951 261.491 159.951C263.376 162.567 268.469 187.538 270.126 194.455Z\"\n                :fill=\"beardColor\"\n            />\n        </template>\n\n        <template v-else-if=\"beard === 'scruff'\">\n            <path\n                d=\"M155 254.301C155 254.853 154.552 255.301 154 255.301C153.448 255.301 153 254.853 153 254.301C153 253.748 153.448 253.301 154 253.301C154.552 253.301 155 253.748 155 254.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M207 261.301C207 261.853 206.552 262.301 206 262.301C205.448 262.301 205 261.853 205 261.301C205 260.748 205.448 260.301 206 260.301C206.552 260.301 207 260.748 207 261.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M203 268.301C203 268.853 202.552 269.301 202 269.301C201.448 269.301 201 268.853 201 268.301C201 267.748 201.448 267.301 202 267.301C202.552 267.301 203 267.748 203 268.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M223 266.301C223 266.853 222.552 267.301 222 267.301C221.448 267.301 221 266.853 221 266.301C221 265.748 221.448 265.301 222 265.301C222.552 265.301 223 265.748 223 266.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M224 256.301C224 256.853 223.552 257.301 223 257.301C222.448 257.301 222 256.853 222 256.301C222 255.748 222.448 255.301 223 255.301C223.552 255.301 224 255.748 224 256.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M244 261.301C244 261.853 243.552 262.301 243 262.301C242.448 262.301 242 261.853 242 261.301C242 260.748 242.448 260.301 243 260.301C243.552 260.301 244 260.748 244 261.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M254 247.301C254 247.853 253.552 248.301 253 248.301C252.448 248.301 252 247.853 252 247.301C252 246.748 252.448 246.301 253 246.301C253.552 246.301 254 246.748 254 247.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M145 233.301C145 233.853 144.552 234.301 144 234.301C143.448 234.301 143 233.853 143 233.301C143 232.748 143.448 232.301 144 232.301C144.552 232.301 145 232.748 145 233.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M178 249.301C178 249.853 177.552 250.301 177 250.301C176.448 250.301 176 249.853 176 249.301C176 248.748 176.448 248.301 177 248.301C177.552 248.301 178 248.748 178 249.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M175 269.301C175 269.853 174.552 270.301 174 270.301C173.448 270.301 173 269.853 173 269.301C173 268.748 173.448 268.301 174 268.301C174.552 268.301 175 268.748 175 269.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M193 273.301C193 273.853 192.552 274.301 192 274.301C191.448 274.301 191 273.853 191 273.301C191 272.748 191.448 272.301 192 272.301C192.552 272.301 193 272.748 193 273.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M227 247.301C227 247.853 226.552 248.301 226 248.301C225.448 248.301 225 247.853 225 247.301C225 246.748 225.448 246.301 226 246.301C226.552 246.301 227 246.748 227 247.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M241 251.301C241 251.853 240.552 252.301 240 252.301C239.448 252.301 239 251.853 239 251.301C239 250.748 239.448 250.301 240 250.301C240.552 250.301 241 250.748 241 251.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M233 268.301C233 268.853 232.552 269.301 232 269.301C231.448 269.301 231 268.853 231 268.301C231 267.748 231.448 267.301 232 267.301C232.552 267.301 233 267.748 233 268.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M247 237.301C247 237.853 246.552 238.301 246 238.301C245.448 238.301 245 237.853 245 237.301C245 236.748 245.448 236.301 246 236.301C246.552 236.301 247 236.748 247 237.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M154 239.301C154 239.853 153.552 240.301 153 240.301C152.448 240.301 152 239.853 152 239.301C152 238.748 152.448 238.301 153 238.301C153.552 238.301 154 238.748 154 239.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M178 239.301C178 239.853 177.552 240.301 177 240.301C176.448 240.301 176 239.853 176 239.301C176 238.748 176.448 238.301 177 238.301C177.552 238.301 178 238.748 178 239.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M178 221.301C178 221.853 177.552 222.301 177 222.301C176.448 222.301 176 221.853 176 221.301C176 220.748 176.448 220.301 177 220.301C177.552 220.301 178 220.748 178 221.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M182 275.301C182 275.853 181.552 276.301 181 276.301C180.448 276.301 180 275.853 180 275.301C180 274.748 180.448 274.301 181 274.301C181.552 274.301 182 274.748 182 275.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M209 275.301C209 275.853 208.552 276.301 208 276.301C207.448 276.301 207 275.853 207 275.301C207 274.748 207.448 274.301 208 274.301C208.552 274.301 209 274.748 209 275.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M220 275.301C220 275.853 219.552 276.301 219 276.301C218.448 276.301 218 275.853 218 275.301C218 274.748 218.448 274.301 219 274.301C219.552 274.301 220 274.748 220 275.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M237 239.301C237 239.853 236.552 240.301 236 240.301C235.448 240.301 235 239.853 235 239.301C235 238.748 235.448 238.301 236 238.301C236.552 238.301 237 238.748 237 239.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M237 221.301C237 221.853 236.552 222.301 236 222.301C235.448 222.301 235 221.853 235 221.301C235 220.748 235.448 220.301 236 220.301C236.552 220.301 237 220.748 237 221.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M257 234.301C257 234.853 256.552 235.301 256 235.301C255.448 235.301 255 234.853 255 234.301C255 233.748 255.448 233.301 256 233.301C256.552 233.301 257 233.748 257 234.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M157 226.301C157 226.853 156.552 227.301 156 227.301C155.448 227.301 155 226.853 155 226.301C155 225.748 155.448 225.301 156 225.301C156.552 225.301 157 225.748 157 226.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M167 261.301C167 261.853 166.552 262.301 166 262.301C165.448 262.301 165 261.853 165 261.301C165 260.748 165.448 260.301 166 260.301C166.552 260.301 167 260.748 167 261.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M163 268.301C163 268.853 162.552 269.301 162 269.301C161.448 269.301 161 268.853 161 268.301C161 267.748 161.448 267.301 162 267.301C162.552 267.301 163 267.748 163 268.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M203 248.301C203 248.853 202.552 249.301 202 249.301C201.448 249.301 201 248.853 201 248.301C201 247.748 201.448 247.301 202 247.301C202.552 247.301 203 247.748 203 248.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M215 250.301C215 250.853 214.552 251.301 214 251.301C213.448 251.301 213 250.853 213 250.301C213 249.748 213.448 249.301 214 249.301C214.552 249.301 215 249.748 215 250.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M201 280.301C201 280.853 200.552 281.301 200 281.301C199.448 281.301 199 280.853 199 280.301C199 279.748 199.448 279.301 200 279.301C200.552 279.301 201 279.748 201 280.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M224 229.301C224 229.853 223.552 230.301 223 230.301C222.448 230.301 222 229.853 222 229.301C222 228.748 222.448 228.301 223 228.301C223.552 228.301 224 228.748 224 229.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M224 211.301C224 211.853 223.552 212.301 223 212.301C222.448 212.301 222 211.853 222 211.301C222 210.748 222.448 210.301 223 210.301C223.552 210.301 224 210.748 224 211.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M248 226.301C248 226.853 247.552 227.301 247 227.301C246.448 227.301 246 226.853 246 226.301C246 225.748 246.448 225.301 247 225.301C247.552 225.301 248 225.748 248 226.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M255 216.301C255 216.853 254.552 217.301 254 217.301C253.448 217.301 253 216.853 253 216.301C253 215.748 253.448 215.301 254 215.301C254.552 215.301 255 215.748 255 216.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M166 235.301C166 235.853 165.552 236.301 165 236.301C164.448 236.301 164 235.853 164 235.301C164 234.748 164.448 234.301 165 234.301C165.552 234.301 166 234.748 166 235.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M166 246.301C166 246.853 165.552 247.301 165 247.301C164.448 247.301 164 246.853 164 246.301C164 245.748 164.448 245.301 165 245.301C165.552 245.301 166 245.748 166 246.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M187 231.301C187 231.853 186.552 232.301 186 232.301C185.448 232.301 185 231.853 185 231.301C185 230.748 185.448 230.301 186 230.301C186.552 230.301 187 230.748 187 231.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M187 213.301C187 213.853 186.552 214.301 186 214.301C185.448 214.301 185 213.853 185 213.301C185 212.748 185.448 212.301 186 212.301C186.552 212.301 187 212.748 187 213.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M199 227.301C199 227.853 198.552 228.301 198 228.301C197.448 228.301 197 227.853 197 227.301C197 226.748 197.448 226.301 198 226.301C198.552 226.301 199 226.748 199 227.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M211 221.301C211 221.853 210.552 222.301 210 222.301C209.448 222.301 209 221.853 209 221.301C209 220.748 209.448 220.301 210 220.301C210.552 220.301 211 220.748 211 221.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M224 221.301C224 221.853 223.552 222.301 223 222.301C222.448 222.301 222 221.853 222 221.301C222 220.748 222.448 220.301 223 220.301C223.552 220.301 224 220.748 224 221.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M237 221.301C237 221.853 236.552 222.301 236 222.301C235.448 222.301 235 221.853 235 221.301C235 220.748 235.448 220.301 236 220.301C236.552 220.301 237 220.748 237 221.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M263 221.301C263 221.853 262.552 222.301 262 222.301C261.448 222.301 261 221.853 261 221.301C261 220.748 261.448 220.301 262 220.301C262.552 220.301 263 220.748 263 221.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M185 261.301C185 261.853 184.552 262.301 184 262.301C183.448 262.301 183 261.853 183 261.301C183 260.748 183.448 260.301 184 260.301C184.552 260.301 185 260.748 185 261.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M196 255.301C196 255.853 195.552 256.301 195 256.301C194.448 256.301 194 255.853 194 255.301C194 254.748 194.448 254.301 195 254.301C195.552 254.301 196 254.748 196 255.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M192 247.301C192 247.853 191.552 248.301 191 248.301C190.448 248.301 190 247.853 190 247.301C190 246.748 190.448 246.301 191 246.301C191.552 246.301 192 246.748 192 247.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M216 238.301C216 238.853 215.552 239.301 215 239.301C214.448 239.301 214 238.853 214 238.301C214 237.748 214.448 237.301 215 237.301C215.552 237.301 216 237.748 216 238.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M167 220.301C167 220.853 166.552 221.301 166 221.301C165.448 221.301 165 220.853 165 220.301C165 219.748 165.448 219.301 166 219.301C166.552 219.301 167 219.748 167 220.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M204 236.301C204 236.853 203.552 237.301 203 237.301C202.448 237.301 202 236.853 202 236.301C202 235.748 202.448 235.301 203 235.301C203.552 235.301 204 235.748 204 236.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M204 218.301C204 218.853 203.552 219.301 203 219.301C202.448 219.301 202 218.853 202 218.301C202 217.748 202.448 217.301 203 217.301C203.552 217.301 204 217.748 204 218.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M239 232.301C239 232.853 238.552 233.301 238 233.301C237.448 233.301 237 232.853 237 232.301C237 231.748 237.448 231.301 238 231.301C238.552 231.301 239 231.748 239 232.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M239 214.301C239 214.853 238.552 215.301 238 215.301C237.448 215.301 237 214.853 237 214.301C237 213.748 237.448 213.301 238 213.301C238.552 213.301 239 213.748 239 214.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M246 216.301C246 216.853 245.552 217.301 245 217.301C244.448 217.301 244 216.853 244 216.301C244 215.748 244.448 215.301 245 215.301C245.552 215.301 246 215.748 246 216.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M261 207.301C261 207.853 260.552 208.301 260 208.301C259.448 208.301 259 207.853 259 207.301C259 206.748 259.448 206.301 260 206.301C260.552 206.301 261 206.748 261 207.301Z\"\n                :fill=\"beardColor\"\n            />\n            <path\n                d=\"M155 254.301C155 254.853 154.552 255.301 154 255.301C153.448 255.301 153 254.853 153 254.301C153 253.748 153.448 253.301 154 253.301C154.552 253.301 155 253.748 155 254.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M207 261.301C207 261.853 206.552 262.301 206 262.301C205.448 262.301 205 261.853 205 261.301C205 260.748 205.448 260.301 206 260.301C206.552 260.301 207 260.748 207 261.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M203 268.301C203 268.853 202.552 269.301 202 269.301C201.448 269.301 201 268.853 201 268.301C201 267.748 201.448 267.301 202 267.301C202.552 267.301 203 267.748 203 268.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M223 266.301C223 266.853 222.552 267.301 222 267.301C221.448 267.301 221 266.853 221 266.301C221 265.748 221.448 265.301 222 265.301C222.552 265.301 223 265.748 223 266.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M224 256.301C224 256.853 223.552 257.301 223 257.301C222.448 257.301 222 256.853 222 256.301C222 255.748 222.448 255.301 223 255.301C223.552 255.301 224 255.748 224 256.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M244 261.301C244 261.853 243.552 262.301 243 262.301C242.448 262.301 242 261.853 242 261.301C242 260.748 242.448 260.301 243 260.301C243.552 260.301 244 260.748 244 261.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M254 247.301C254 247.853 253.552 248.301 253 248.301C252.448 248.301 252 247.853 252 247.301C252 246.748 252.448 246.301 253 246.301C253.552 246.301 254 246.748 254 247.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M145 233.301C145 233.853 144.552 234.301 144 234.301C143.448 234.301 143 233.853 143 233.301C143 232.748 143.448 232.301 144 232.301C144.552 232.301 145 232.748 145 233.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M178 249.301C178 249.853 177.552 250.301 177 250.301C176.448 250.301 176 249.853 176 249.301C176 248.748 176.448 248.301 177 248.301C177.552 248.301 178 248.748 178 249.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M175 269.301C175 269.853 174.552 270.301 174 270.301C173.448 270.301 173 269.853 173 269.301C173 268.748 173.448 268.301 174 268.301C174.552 268.301 175 268.748 175 269.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M193 273.301C193 273.853 192.552 274.301 192 274.301C191.448 274.301 191 273.853 191 273.301C191 272.748 191.448 272.301 192 272.301C192.552 272.301 193 272.748 193 273.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M227 247.301C227 247.853 226.552 248.301 226 248.301C225.448 248.301 225 247.853 225 247.301C225 246.748 225.448 246.301 226 246.301C226.552 246.301 227 246.748 227 247.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M241 251.301C241 251.853 240.552 252.301 240 252.301C239.448 252.301 239 251.853 239 251.301C239 250.748 239.448 250.301 240 250.301C240.552 250.301 241 250.748 241 251.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M233 268.301C233 268.853 232.552 269.301 232 269.301C231.448 269.301 231 268.853 231 268.301C231 267.748 231.448 267.301 232 267.301C232.552 267.301 233 267.748 233 268.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M247 237.301C247 237.853 246.552 238.301 246 238.301C245.448 238.301 245 237.853 245 237.301C245 236.748 245.448 236.301 246 236.301C246.552 236.301 247 236.748 247 237.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M154 239.301C154 239.853 153.552 240.301 153 240.301C152.448 240.301 152 239.853 152 239.301C152 238.748 152.448 238.301 153 238.301C153.552 238.301 154 238.748 154 239.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M178 239.301C178 239.853 177.552 240.301 177 240.301C176.448 240.301 176 239.853 176 239.301C176 238.748 176.448 238.301 177 238.301C177.552 238.301 178 238.748 178 239.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M178 221.301C178 221.853 177.552 222.301 177 222.301C176.448 222.301 176 221.853 176 221.301C176 220.748 176.448 220.301 177 220.301C177.552 220.301 178 220.748 178 221.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M182 275.301C182 275.853 181.552 276.301 181 276.301C180.448 276.301 180 275.853 180 275.301C180 274.748 180.448 274.301 181 274.301C181.552 274.301 182 274.748 182 275.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M209 275.301C209 275.853 208.552 276.301 208 276.301C207.448 276.301 207 275.853 207 275.301C207 274.748 207.448 274.301 208 274.301C208.552 274.301 209 274.748 209 275.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M220 275.301C220 275.853 219.552 276.301 219 276.301C218.448 276.301 218 275.853 218 275.301C218 274.748 218.448 274.301 219 274.301C219.552 274.301 220 274.748 220 275.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M237 239.301C237 239.853 236.552 240.301 236 240.301C235.448 240.301 235 239.853 235 239.301C235 238.748 235.448 238.301 236 238.301C236.552 238.301 237 238.748 237 239.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M237 221.301C237 221.853 236.552 222.301 236 222.301C235.448 222.301 235 221.853 235 221.301C235 220.748 235.448 220.301 236 220.301C236.552 220.301 237 220.748 237 221.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M257 234.301C257 234.853 256.552 235.301 256 235.301C255.448 235.301 255 234.853 255 234.301C255 233.748 255.448 233.301 256 233.301C256.552 233.301 257 233.748 257 234.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M157 226.301C157 226.853 156.552 227.301 156 227.301C155.448 227.301 155 226.853 155 226.301C155 225.748 155.448 225.301 156 225.301C156.552 225.301 157 225.748 157 226.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M167 261.301C167 261.853 166.552 262.301 166 262.301C165.448 262.301 165 261.853 165 261.301C165 260.748 165.448 260.301 166 260.301C166.552 260.301 167 260.748 167 261.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M163 268.301C163 268.853 162.552 269.301 162 269.301C161.448 269.301 161 268.853 161 268.301C161 267.748 161.448 267.301 162 267.301C162.552 267.301 163 267.748 163 268.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M203 248.301C203 248.853 202.552 249.301 202 249.301C201.448 249.301 201 248.853 201 248.301C201 247.748 201.448 247.301 202 247.301C202.552 247.301 203 247.748 203 248.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M215 250.301C215 250.853 214.552 251.301 214 251.301C213.448 251.301 213 250.853 213 250.301C213 249.748 213.448 249.301 214 249.301C214.552 249.301 215 249.748 215 250.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M201 280.301C201 280.853 200.552 281.301 200 281.301C199.448 281.301 199 280.853 199 280.301C199 279.748 199.448 279.301 200 279.301C200.552 279.301 201 279.748 201 280.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M224 229.301C224 229.853 223.552 230.301 223 230.301C222.448 230.301 222 229.853 222 229.301C222 228.748 222.448 228.301 223 228.301C223.552 228.301 224 228.748 224 229.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M224 211.301C224 211.853 223.552 212.301 223 212.301C222.448 212.301 222 211.853 222 211.301C222 210.748 222.448 210.301 223 210.301C223.552 210.301 224 210.748 224 211.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M248 226.301C248 226.853 247.552 227.301 247 227.301C246.448 227.301 246 226.853 246 226.301C246 225.748 246.448 225.301 247 225.301C247.552 225.301 248 225.748 248 226.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M255 216.301C255 216.853 254.552 217.301 254 217.301C253.448 217.301 253 216.853 253 216.301C253 215.748 253.448 215.301 254 215.301C254.552 215.301 255 215.748 255 216.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M166 235.301C166 235.853 165.552 236.301 165 236.301C164.448 236.301 164 235.853 164 235.301C164 234.748 164.448 234.301 165 234.301C165.552 234.301 166 234.748 166 235.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M166 246.301C166 246.853 165.552 247.301 165 247.301C164.448 247.301 164 246.853 164 246.301C164 245.748 164.448 245.301 165 245.301C165.552 245.301 166 245.748 166 246.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M187 231.301C187 231.853 186.552 232.301 186 232.301C185.448 232.301 185 231.853 185 231.301C185 230.748 185.448 230.301 186 230.301C186.552 230.301 187 230.748 187 231.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M187 213.301C187 213.853 186.552 214.301 186 214.301C185.448 214.301 185 213.853 185 213.301C185 212.748 185.448 212.301 186 212.301C186.552 212.301 187 212.748 187 213.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M199 227.301C199 227.853 198.552 228.301 198 228.301C197.448 228.301 197 227.853 197 227.301C197 226.748 197.448 226.301 198 226.301C198.552 226.301 199 226.748 199 227.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M211 221.301C211 221.853 210.552 222.301 210 222.301C209.448 222.301 209 221.853 209 221.301C209 220.748 209.448 220.301 210 220.301C210.552 220.301 211 220.748 211 221.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M224 221.301C224 221.853 223.552 222.301 223 222.301C222.448 222.301 222 221.853 222 221.301C222 220.748 222.448 220.301 223 220.301C223.552 220.301 224 220.748 224 221.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M237 221.301C237 221.853 236.552 222.301 236 222.301C235.448 222.301 235 221.853 235 221.301C235 220.748 235.448 220.301 236 220.301C236.552 220.301 237 220.748 237 221.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M263 221.301C263 221.853 262.552 222.301 262 222.301C261.448 222.301 261 221.853 261 221.301C261 220.748 261.448 220.301 262 220.301C262.552 220.301 263 220.748 263 221.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M185 261.301C185 261.853 184.552 262.301 184 262.301C183.448 262.301 183 261.853 183 261.301C183 260.748 183.448 260.301 184 260.301C184.552 260.301 185 260.748 185 261.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M196 255.301C196 255.853 195.552 256.301 195 256.301C194.448 256.301 194 255.853 194 255.301C194 254.748 194.448 254.301 195 254.301C195.552 254.301 196 254.748 196 255.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M192 247.301C192 247.853 191.552 248.301 191 248.301C190.448 248.301 190 247.853 190 247.301C190 246.748 190.448 246.301 191 246.301C191.552 246.301 192 246.748 192 247.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M216 238.301C216 238.853 215.552 239.301 215 239.301C214.448 239.301 214 238.853 214 238.301C214 237.748 214.448 237.301 215 237.301C215.552 237.301 216 237.748 216 238.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M167 220.301C167 220.853 166.552 221.301 166 221.301C165.448 221.301 165 220.853 165 220.301C165 219.748 165.448 219.301 166 219.301C166.552 219.301 167 219.748 167 220.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M204 236.301C204 236.853 203.552 237.301 203 237.301C202.448 237.301 202 236.853 202 236.301C202 235.748 202.448 235.301 203 235.301C203.552 235.301 204 235.748 204 236.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M204 218.301C204 218.853 203.552 219.301 203 219.301C202.448 219.301 202 218.853 202 218.301C202 217.748 202.448 217.301 203 217.301C203.552 217.301 204 217.748 204 218.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M239 232.301C239 232.853 238.552 233.301 238 233.301C237.448 233.301 237 232.853 237 232.301C237 231.748 237.448 231.301 238 231.301C238.552 231.301 239 231.748 239 232.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M239 214.301C239 214.853 238.552 215.301 238 215.301C237.448 215.301 237 214.853 237 214.301C237 213.748 237.448 213.301 238 213.301C238.552 213.301 239 213.748 239 214.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M246 216.301C246 216.853 245.552 217.301 245 217.301C244.448 217.301 244 216.853 244 216.301C244 215.748 244.448 215.301 245 215.301C245.552 215.301 246 215.748 246 216.301Z\"\n                :stroke=\"beardColor\"\n            />\n            <path\n                d=\"M261 207.301C261 207.853 260.552 208.301 260 208.301C259.448 208.301 259 207.853 259 207.301C259 206.748 259.448 206.301 260 206.301C260.552 206.301 261 206.748 261 207.301Z\"\n                :stroke=\"beardColor\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Beard',\n        props: {\n            beard: props.beard,\n            beardColor: props.beardColor\n        }\n    })\n</script>\n","<template>\n    <g clip-path=\"url(#clip0)\">\n        <path\n            d=\"M244 362.5C229.6 342.5 218.333 303.834 217 284.5L148.5 255L120 362.5H244Z\"\n            :fill=\"faceColor\"\n            stroke=\"black\"\n            stroke-width=\"4\"\n        />\n        <mask\n            id=\"mask1\"\n            mask-type=\"alpha\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"120\"\n            y=\"255\"\n            width=\"124\"\n            height=\"118\"\n        >\n            <path\n                d=\"M244 372.5C229.6 352.5 218.333 303.834 217 284.5L148.5 255L120 372.5H244Z\"\n                :fill=\"faceColor\"\n            />\n        </mask>\n        <g mask=\"url(#mask1)\">\n            <g style=\"mix-blend-mode: multiply\">\n                <ellipse cx=\"214\" cy=\"253\" rx=\"59\" ry=\"54\" fill=\"black\" />\n            </g>\n        </g>\n        <mask id=\"path-6-inside-1\" fill=\"white\">\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M273.886 193.917C273.859 193.801 273.831 193.685 273.803 193.569C273.776 193.454 273.748 193.338 273.719 193.222L257.323 124.786C257.306 124.718 257.29 124.65 257.274 124.582C257.258 124.514 257.242 124.446 257.225 124.379L257.152 124.075L257.151 124.076C246.933 82.6308 205.156 57.1472 163.582 67.1081C122.008 77.0689 96.3155 118.717 105.988 160.293L105.986 160.293L122.978 231.211L122.992 231.208C133.594 272.112 175.062 297.149 216.329 287.261C257.597 277.374 283.216 236.264 274.131 194.996L274.144 194.993L273.886 193.917Z\"\n            />\n        </mask>\n        <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M273.886 193.917C273.859 193.801 273.831 193.685 273.803 193.569C273.776 193.454 273.748 193.338 273.719 193.222L257.323 124.786C257.306 124.718 257.29 124.65 257.274 124.582C257.258 124.514 257.242 124.446 257.225 124.379L257.152 124.075L257.151 124.076C246.933 82.6308 205.156 57.1472 163.582 67.1081C122.008 77.0689 96.3155 118.717 105.988 160.293L105.986 160.293L122.978 231.211L122.992 231.208C133.594 272.112 175.062 297.149 216.329 287.261C257.597 277.374 283.216 236.264 274.131 194.996L274.144 194.993L273.886 193.917Z\"\n            :fill=\"faceColor\"\n        />\n        <path\n            d=\"M273.886 193.917L269.992 194.831L269.994 194.84L269.996 194.849L273.886 193.917ZM273.719 193.222L269.83 194.154L269.832 194.163L269.834 194.172L273.719 193.222ZM257.323 124.786L253.43 125.708L253.433 125.718L257.323 124.786ZM257.225 124.379L253.335 125.311L253.338 125.321L257.225 124.379ZM257.152 124.075L261.042 123.143L260.111 119.255L256.222 120.185L257.152 124.075ZM257.151 124.076L253.267 125.033L254.218 128.89L258.081 127.966L257.151 124.076ZM163.582 67.1081L162.65 63.2182L163.582 67.1081ZM105.988 160.293L106.922 164.182L110.784 163.255L109.884 159.386L105.988 160.293ZM105.986 160.293L105.052 156.404L101.165 157.337L102.096 161.225L105.986 160.293ZM122.978 231.211L119.088 232.143L120.02 236.035L123.911 235.101L122.978 231.211ZM122.992 231.208L126.864 230.204L125.878 226.401L122.058 227.318L122.992 231.208ZM216.329 287.261L215.397 283.371H215.397L216.329 287.261ZM274.131 194.996L273.2 191.106L269.381 192.021L270.225 195.856L274.131 194.996ZM274.144 194.993L275.075 198.883L278.966 197.951L278.034 194.061L274.144 194.993ZM277.78 193.002C277.751 192.881 277.722 192.759 277.693 192.637L269.914 194.502C269.94 194.611 269.966 194.721 269.992 194.831L277.78 193.002ZM277.693 192.637C277.664 192.516 277.635 192.395 277.605 192.273L269.834 194.172C269.861 194.281 269.887 194.391 269.914 194.502L277.693 192.637ZM253.433 125.718L269.83 194.154L277.609 192.29L261.212 123.854L253.433 125.718ZM261.215 123.863C261.198 123.793 261.181 123.722 261.164 123.65L253.384 125.514C253.4 125.578 253.415 125.643 253.43 125.708L261.215 123.863ZM261.164 123.65C261.147 123.579 261.13 123.508 261.113 123.436L253.338 125.321C253.353 125.385 253.369 125.449 253.384 125.514L261.164 123.65ZM253.262 125.007L253.335 125.311L261.115 123.447L261.042 123.143L253.262 125.007ZM258.081 127.966L258.083 127.966L256.222 120.185L256.221 120.185L258.081 127.966ZM261.035 123.118C250.291 79.5398 206.364 52.7447 162.65 63.2182L164.514 70.998C203.949 61.5498 243.575 85.7219 253.267 125.033L261.035 123.118ZM162.65 63.2182C118.936 73.6917 91.9216 117.484 102.092 161.199L109.884 159.386C100.709 119.951 125.08 80.4461 164.514 70.998L162.65 63.2182ZM106.92 164.183L106.922 164.182L105.054 156.403L105.052 156.404L106.92 164.183ZM126.868 230.279L109.876 159.361L102.096 161.225L119.088 232.143L126.868 230.279ZM122.058 227.318L122.044 227.322L123.911 235.101L123.925 235.097L122.058 227.318ZM119.12 232.211C130.268 275.223 173.869 301.548 217.261 291.151L215.397 283.371C176.254 292.75 136.92 269.002 126.864 230.204L119.12 232.211ZM217.261 291.151C260.653 280.755 287.591 237.53 278.038 194.136L270.225 195.856C278.842 234.999 254.541 273.993 215.397 283.371L217.261 291.151ZM273.212 191.103L273.2 191.106L275.063 198.886L275.075 198.883L273.212 191.103ZM269.996 194.849L270.254 195.925L278.034 194.061L277.776 192.985L269.996 194.849Z\"\n            fill=\"black\"\n            mask=\"url(#path-6-inside-1)\"\n        />\n        <Beard :beard=\"beard\" :beard-color=\"beardColor\" />\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n    import Beard from './beard.vue'\n\n    export default defineComponent({\n        name: 'Face',\n        components: { Beard },\n        props: {\n            faceColor: props.faceColor,\n            beard: props.beard,\n            beardColor: props.beardColor\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"ear === 'small'\">\n            <path\n                d=\"M124.5 180.176C122.17 179.408 119.655 179 117.08 179C106.587 179 98.0801 185.5 99.08 197.5C100.122 210 107.587 214.5 118.08 214.5C119.248 214.5 120.391 214.397 121.5 214.201C122.711 213.987 123.881 213.661 125 213.235\"\n                stroke=\"black\"\n                stroke-width=\"8\"\n            />\n            <path\n                d=\"M125.5 213.036C123.22 213.979 120.713 214.5 118.08 214.5C107.587 214.5 100.122 210 99.08 197.5C98.0801 185.5 106.587 179 117.08 179C120.217 179 123.267 179.606 126 180.73L125.5 213.036Z\"\n                :fill=\"faceColor\"\n            />\n            <path\n                d=\"M121.5 187.5C117.5 185.667 108.7 184.7 105.5 195.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M111 188C113.167 189.833 117.3 195.5 116.5 203.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"ear === 'big'\">\n            <path\n                d=\"M131 182.249V181.13L130.046 180.545C126.312 178.254 121.772 177 117.08 177C111.44 177 106.159 178.747 102.398 182.295C98.5942 185.882 96.5421 191.127 97.0869 197.666C97.6179 204.038 99.7569 208.727 103.305 211.843C103.013 212.842 102.927 213.92 103.062 215.053C103.452 218.322 105.104 220.677 107.657 222.128C110.091 223.511 113.206 224 116.524 224C122.003 224 126.808 221.053 130.466 217.111L131 216.536V215.751V182.249Z\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M136.972 197.984C137.043 197.332 137.08 196.67 137.08 196C137.08 185.783 127.573 179 117.08 179C106.587 179 98.0801 185.5 99.08 197.5C99.6364 204.177 102.026 208.572 105.731 211.217C105.142 212.241 104.885 213.444 105.048 214.817C105.677 220.098 110.186 222 116.524 222C127.629 222 136.416 207.953 136.972 197.984Z\"\n                :fill=\"faceColor\"\n            />\n            <path\n                d=\"M121.5 187.5C117.5 185.667 108.7 184.7 105.5 195.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M111 188C113.167 189.833 117.3 195.5 116.5 203.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n    export default defineComponent({\n        name: 'Ear',\n        props: {\n            ear: props.ear,\n            faceColor: props.faceColor\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"ear === 'small' && earring === 'hoop'\">\n            <path\n                d=\"M121 209C134.255 209 145 219.745 145 233C145 246.255 134.255 257 121 257C107.745 257 97 246.255 97 233C97 226.609 100.5 221.5 103.571 216.5L104.5 215\"\n                stroke=\"#F4D150\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"ear === 'small' && earring === 'stud'\">\n            <circle cx=\"122\" cy=\"211\" r=\"4\" fill=\"#F4D150\" />\n            <circle cx=\"123\" cy=\"210\" r=\"1\" fill=\"#FFEDEF\" />\n        </template>\n\n        <template v-else-if=\"ear === 'big' && earring === 'hoop'\">\n            <path\n                d=\"M114 214C127.255 214 138 224.745 138 238C138 251.255 127.255 262 114 262C100.745 262 90 251.255 90 238C90 231.609 93.5 226.5 96.5715 221.5L97.5 220\"\n                stroke=\"#F4D150\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"ear === 'big' && earring === 'stud'\">\n            <circle cx=\"115\" cy=\"216\" r=\"4\" fill=\"#F4D150\" />\n            <circle cx=\"116\" cy=\"215\" r=\"1\" fill=\"#FFEDEF\" />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Earring',\n        props: {\n            ear: props.ear,\n            earring: props.earring\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"mouth === 'frown'\">\n            <path\n                d=\"M175 244C178.211 236.043 190.107 219.233 212.007 215.652C233.907 212.071 245.127 224.107 248 230.572\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"mouth === 'laughing'\">\n            <path\n                d=\"M242.807 228.178C243.873 224.321 244.248 220.311 243.92 216.331C243.75 214.263 241.636 213.112 239.845 213.818C235.616 215.484 221.627 220.783 211.763 222.14C200.94 223.629 184.55 221.821 179.806 221.232C177.877 220.992 176.157 222.65 176.49 224.665C177.142 228.608 178.484 232.409 180.459 235.891C182.661 239.775 185.606 243.188 189.127 245.933C192.648 248.679 196.676 250.704 200.979 251.893C205.283 253.083 209.779 253.413 214.21 252.864C218.641 252.316 222.921 250.901 226.805 248.698C230.689 246.496 234.101 243.55 236.847 240.029C239.593 236.508 241.618 232.481 242.807 228.178Z\"\n                fill=\"black\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <mask\n                id=\"mask2\"\n                mask-type=\"alpha\"\n                maskUnits=\"userSpaceOnUse\"\n                x=\"178\"\n                y=\"215\"\n                width=\"65\"\n                height=\"37\"\n            >\n                <path\n                    d=\"M241.793 215.193C242.309 219.363 241.999 223.594 240.879 227.645C239.76 231.695 237.854 235.486 235.27 238.8C232.686 242.113 229.474 244.886 225.818 246.958C222.163 249.031 218.135 250.364 213.964 250.88C209.794 251.396 205.563 251.085 201.512 249.966C197.462 248.846 193.671 246.94 190.357 244.356C187.043 241.772 184.271 238.56 182.198 234.905C180.126 231.249 178.793 227.221 178.277 223.051L241.793 215.193Z\"\n                    fill=\"#171921\"\n                />\n            </mask>\n            <g mask=\"url(#mask2)\">\n                <circle\n                    cx=\"214.522\"\n                    cy=\"255.315\"\n                    r=\"21.5\"\n                    transform=\"rotate(-7.05286 214.522 255.315)\"\n                    fill=\"#FC909F\"\n                />\n            </g>\n        </template>\n\n        <template v-else-if=\"mouth === 'nervous'\">\n            <rect\n                x=\"173.248\"\n                y=\"220.471\"\n                width=\"70\"\n                height=\"24\"\n                rx=\"4\"\n                transform=\"rotate(-4 173.248 220.471)\"\n                fill=\"black\"\n            />\n            <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M236.821 216.025L179.504 220.033L181.344 227.038C182.077 229.827 184.689 231.7 187.566 231.499C184.689 231.7 182.363 233.919 182.025 236.782L181.178 243.975L238.495 239.967L236.655 232.962C235.923 230.173 233.31 228.3 230.434 228.501C233.31 228.3 235.636 226.081 235.974 223.218L236.821 216.025Z\"\n                fill=\"white\"\n            />\n            <path\n                d=\"M246.419 234.704L245.4 220.134C245.143 216.448 241.663 213.88 238.079 214.649C231.135 216.14 217.858 218.783 208.262 219.454C198.667 220.125 185.151 219.355 178.067 218.845C174.411 218.582 171.323 221.61 171.581 225.296L172.599 239.866C172.857 243.552 176.336 246.12 179.921 245.351C186.865 243.86 200.142 241.217 209.737 240.546C219.333 239.875 232.849 240.645 239.933 241.155C243.589 241.418 246.677 238.39 246.419 234.704Z\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"mouth === 'pucker'\">\n            <path\n                d=\"M206 219.696C210.167 217.363 227 214.396 227 221.196C227 229.696 215.5 229.196 215.5 229.196C215.5 229.196 228.545 226.035 226 235.196C223.5 244.196 216.5 240.696 214.5 239.696\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"mouth === 'sad'\">\n            <path\n                d=\"M193 249C194.715 241.043 201.071 224.233 212.771 220.652C224.471 217.071 230.465 229.107 232 235.572\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"mouth === 'smile'\">\n            <path\n                d=\"M179.5 220.5C182 237.5 210.5 245.5 236.5 226\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"mouth === 'smirk'\">\n            <path\n                d=\"M190.001 227.165C194.941 233.612 202.428 240.754 213.977 239.125C225.526 237.496 230.664 229.53 229.149 223.078\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"mouth === 'suprised'\">\n            <path\n                d=\"M216.047 257.891C226.884 255.93 233.233 243.955 231.025 231.754C228.817 219.553 218.673 210.562 207.836 212.523C196.999 214.484 190.65 226.46 192.859 238.661C195.067 250.862 205.21 259.853 216.047 257.891Z\"\n                fill=\"black\"\n                stroke=\"black\"\n                stroke-width=\"3.59115\"\n            />\n            <mask\n                id=\"mask2\"\n                mask-type=\"alpha\"\n                maskUnits=\"userSpaceOnUse\"\n                x=\"194\"\n                y=\"214\"\n                width=\"36\"\n                height=\"43\"\n            >\n                <ellipse\n                    cx=\"211.942\"\n                    cy=\"235.207\"\n                    rx=\"17.5976\"\n                    ry=\"21.257\"\n                    transform=\"rotate(-10.2582 211.942 235.207)\"\n                    fill=\"#171921\"\n                />\n            </mask>\n            <g mask=\"url(#mask2)\">\n                <ellipse\n                    cx=\"215.202\"\n                    cy=\"253.219\"\n                    rx=\"20.2046\"\n                    ry=\"18.3047\"\n                    transform=\"rotate(-10.2582 215.202 253.219)\"\n                    fill=\"#FC909F\"\n                />\n            </g>\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Mouth',\n        props: {\n            mouth: props.mouth\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"hair === 'danny-phantom'\">\n            <path\n                d=\"M182.788 48.4887L182.864 48.4969L182.941 48.4991C209.61 49.2835 230.342 59.8969 245.013 72.8493C259.069 85.2583 267.463 99.7231 270.2 109.582C266.14 111.899 259.185 113.893 250.315 115.528C240.639 117.312 229.022 118.615 217.168 119.544C193.462 121.401 168.978 121.749 157.543 121.5L151.47 121.368L156.276 125.083C158.774 127.013 162.099 128.356 165.615 129.3C169.156 130.252 173.034 130.835 176.746 131.167C180.57 131.509 184.299 131.589 187.387 131.51C176.8 139.672 163.325 145.948 150.038 150.6C134.692 155.973 119.768 159.12 110.209 160.521L108.06 160.836L108.551 162.952C111.898 177.381 118.052 202.603 122.179 219.519C124.01 227.025 125.442 232.895 126.054 235.463C127.138 240.017 130.552 246.508 134.448 252.491C138.041 258.008 142.233 263.38 145.77 266.687L137.932 298.5H108.371C116.709 285.787 118.469 271.097 116.769 255.517C114.929 238.653 109.007 220.513 102.766 202.35C102.151 200.562 101.534 198.774 100.916 196.986C95.2326 180.527 89.5644 164.113 86.4936 148.382C83.0922 130.958 82.9407 114.651 89.3264 100.314C99.6653 77.0999 117.993 63.6198 136.326 56.1911C154.701 48.745 172.945 47.4399 182.788 48.4887Z\"\n                :fill=\"hairColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'doug-funny'\">\n            <path\n                d=\"M199 87C213.667 86.3333 239.4 78.2 225 51\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M173 85C187.667 84.3333 213.4 76.2 199 49\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M137 96C151.667 95.3333 177.4 87.2 163 60\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'fonza'\">\n            <path\n                d=\"M269.177 82.3965C260.855 122.294 162.499 127.896 142.677 127.896C90.6548 133.823 115.625 196.262 125.177 227.396C117.677 228.396 118.677 237.396 89.6772 165.896C66.4772 108.696 132.183 73.8337 180.999 61.9995C229.815 50.1653 248.499 33.502 248.499 33.502C269.177 42 274.116 58.7185 269.177 82.3965Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                d=\"M264.134 155.947L248.316 102.507L258.354 93.3644C269.109 130.452 269.601 151.988 264.134 155.947Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                d=\"M139 201C133.4 173.8 119.333 178.667 110 180L100 136L140.584 127.506C141.336 127.266 142.141 127.095 143 127L140.584 127.506C122.433 133.299 134.956 179.796 150 199L139 201Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                d=\"M83.9887 98.3632C92.8341 93.9091 103.281 96.4873 107.398 98.3331L95.6273 113.213C98.6625 108.357 89.1329 101.29 83.9887 98.3632Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                d=\"M69 115.5C80.6 108.7 91.8333 111 96 113L91.5 128.5C90.3 120.1 76 116.333 69 115.5Z\"\n                :fill=\"hairColor\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'full'\">\n            <path\n                d=\"M45.6007 343.857C45.4477 343.466 45.2377 342.916 44.9828 342.219C44.4158 340.667 43.6268 338.384 42.7485 335.479C40.9915 329.667 38.8806 321.38 37.4734 311.502C34.6563 291.725 34.6769 265.696 45.8698 240.384C47.679 236.292 49.94 232.089 52.3903 227.533C61.8582 209.931 74.1551 187.07 74.1551 145.084C74.1551 114.493 89.0029 88.7305 110.862 70.5692C132.741 52.3915 161.56 41.9109 189.237 41.9109C204.368 41.9109 216.533 43.6444 226.311 49.5511C236.028 55.4212 243.679 65.5978 249.362 83.1322C249.94 84.9168 251.851 86.0074 253.719 85.4015C265.034 81.7304 282.191 85.4361 296.673 94.8904C311.091 104.303 322.289 119.046 322.289 136.814C322.289 152.24 319.647 162.664 317.071 172.815L317.071 172.815C313.952 185.104 310.94 196.974 313.065 216.313C313.774 222.762 315.216 227.336 317.231 231.128C319.213 234.859 321.712 237.747 324.345 240.792L324.405 240.861C330.679 248.113 333.534 254.079 334.455 259.327C335.375 264.562 334.412 269.31 332.623 274.237C331.723 276.712 330.629 279.197 329.47 281.815L329.37 282.041C328.248 284.573 327.074 287.225 326.019 290.016C323.836 295.787 322.133 302.223 322.302 309.851C322.446 316.326 323.594 320.764 325.311 324.122C327.008 327.442 329.199 329.565 331.11 331.416L331.162 331.466C332.905 333.155 334.355 334.577 335.428 336.57C336.387 338.351 337.098 340.702 337.217 344.232C313.208 358.511 289.445 364.413 271.601 366.734C262.565 367.91 255.057 368.166 249.818 368.129C247.199 368.11 245.149 368.019 243.76 367.932C243.271 367.902 242.865 367.872 242.544 367.847C236.393 358.458 230.789 342.969 226.447 327.059C222.226 311.589 219.261 295.968 218.147 285.649C255.22 274.931 278.458 236.667 272.871 197.189C272.864 197.117 272.856 197.067 272.856 197.066C272.848 197.006 272.837 196.938 272.825 196.867C272.813 196.792 272.798 196.703 272.78 196.601C272.764 196.511 272.746 196.41 272.726 196.3C272.641 195.832 272.516 195.172 272.353 194.346C272.028 192.693 271.552 190.358 270.942 187.532C269.722 181.88 267.967 174.249 265.825 166.155C263.685 158.065 261.152 149.485 258.372 141.945C255.613 134.46 252.541 127.802 249.264 123.706L248.967 123.335L248.532 123.146C246.6 122.308 244.593 121.374 242.499 120.399C232.568 115.775 220.659 110.23 205.235 109.62C186.46 108.877 162.684 115.396 130.544 138.706L128.521 140.173L130.467 141.74C146.393 154.574 149.836 171.598 149.1 186.048C148.539 197.077 145.551 206.459 143.865 211.149C142.704 209.452 141.964 207.319 141.408 204.814C141.023 203.083 140.743 201.258 140.449 199.347L140.403 199.045C140.096 197.051 139.769 194.97 139.292 192.961C138.341 188.95 136.732 184.941 133.16 182.102C129.581 179.257 124.364 177.848 116.767 178.272L114.54 178.396L115.005 180.578L126.363 233.891L126.382 233.98L126.41 234.068C130.468 246.93 137.426 258.078 146.323 266.88C146.399 267.007 146.509 267.193 146.65 267.434C146.939 267.928 147.356 268.653 147.861 269.563C148.87 271.384 150.229 273.941 151.621 276.886C154.435 282.835 157.282 290.138 157.83 296.102C158.386 302.154 156.865 309.962 155.123 316.412C154.26 319.605 153.361 322.406 152.677 324.407C152.535 324.824 152.402 325.206 152.281 325.549C147.249 323.144 142.754 323.323 138.902 325.565C134.738 327.989 131.689 332.625 129.419 337.781C125.271 347.202 123.276 359.42 122.355 367.002C97.4846 361.298 78.281 355.507 65.2149 351.107C58.5012 348.846 53.408 346.953 49.9993 345.627C48.2949 344.964 47.0117 344.443 46.1575 344.089C45.9454 344.002 45.7598 343.924 45.6007 343.857Z\"\n                :fill=\"hairColor\"\n                stroke=\"black\"\n                stroke-width=\"3.82184\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'mr-clean'\">\n            <ellipse\n                cx=\"206.854\"\n                cy=\"89.1803\"\n                rx=\"6.85759\"\n                ry=\"18.4393\"\n                transform=\"rotate(117 206.854 89.1803)\"\n                fill=\"rgba(255,255,255,0.3)\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'mr-t'\">\n            <path\n                opacity=\"0.35\"\n                d=\"M246.986 108.176C238.986 101.776 225.153 101.176 219.486 101.676L211.486 75.1758C225.086 78.3758 243.486 99.1758 246.986 108.176Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                d=\"M144.792 42.7636C144.792 42.7636 150.53 38.802 174.746 32.701C198.963 26.5999 207.792 28.9833 207.792 28.9833L219.581 101.815C219.581 101.815 211.542 101.642 191.548 106.009C171.555 110.375 161.986 115.675 161.986 115.675L144.792 42.7636Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                d=\"M107.985 117.676C101.185 76.0758 131.319 49.5091 144.985 42.1758L161.985 115.676C142.785 76.0758 116.652 100.509 107.985 117.676Z\"\n                :fill=\"hairColor\"\n            />\n            <path\n                opacity=\"0.35\"\n                d=\"M126.485 161.675C119.285 134.475 148.485 119.842 161.985 115.675C154.985 99.3415 138.985 84.6749 119.485 102.676C101.485 133.175 108.485 156.676 113.986 174.675L126.485 161.675Z\"\n                :fill=\"hairColor\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'pixie'\">\n            <path\n                d=\"M164.837 119.819C166.725 120.117 166.725 120.119 166.724 120.12L166.724 120.123L166.723 120.131L166.72 120.149C166.717 120.163 166.714 120.18 166.711 120.2C166.703 120.24 166.693 120.292 166.68 120.356C166.653 120.484 166.613 120.66 166.555 120.884C166.44 121.331 166.252 121.965 165.955 122.778C165.36 124.403 164.329 126.736 162.562 129.701C159.392 135.018 153.86 142.359 144.246 151.29C174.216 152.037 199.25 142.382 217.067 132.257C226.428 126.938 233.779 121.498 238.784 117.394C241.286 115.343 243.199 113.627 244.482 112.429C245.123 111.83 245.607 111.361 245.928 111.044C246.088 110.886 246.208 110.766 246.286 110.687C246.325 110.647 246.353 110.618 246.372 110.599L246.391 110.579L246.395 110.575L246.395 110.575L248.677 108.201L249.606 111.36L247.772 111.899C249.606 111.36 249.606 111.36 249.606 111.361L249.607 111.363L249.609 111.372L249.619 111.405L249.658 111.538L249.81 112.058C249.944 112.515 250.14 113.187 250.391 114.052C250.894 115.78 251.616 118.275 252.496 121.344C254.255 127.483 256.643 135.919 259.162 145.11C264.189 163.457 269.766 184.924 271.855 197.08C275.348 217.398 269.947 232.824 266.753 241.949C266.132 243.723 265.594 245.259 265.222 246.546C265.275 246.591 265.345 246.646 265.436 246.711C266.033 247.134 267.092 247.622 268.623 248.108C271.638 249.067 275.942 249.853 280.544 250.296C285.138 250.738 289.921 250.828 293.882 250.442C295.864 250.248 297.587 249.94 298.957 249.522C300.273 249.12 301.097 248.665 301.542 248.254C301.555 248.168 301.573 247.963 301.523 247.566C301.425 246.79 301.118 245.698 300.586 244.253C299.793 242.096 298.617 239.455 297.242 236.368C296.776 235.321 296.287 234.222 295.782 233.074C291.853 224.135 287.126 212.51 286.096 200.666C284.952 187.505 287.553 176.25 289.89 166.133L290.001 165.651C292.389 155.311 294.376 146.332 292.336 137.232C289.24 123.422 285.017 111.924 278.532 103.662C272.115 95.4881 263.412 90.3865 251.036 89.4485L249.758 89.3516L249.363 88.1322C243.668 70.5619 235.98 59.081 226.177 51.9616C216.377 44.8448 204.221 41.9109 189.238 41.9109C161.55 41.9109 131.735 52.4301 109.36 70.629C87.0087 88.8092 72.2166 114.525 74.1521 144.963C76.288 178.554 73.8537 204.024 68.3638 222.675C63.3578 239.682 55.7707 251.141 46.6763 257.825C47.8695 258.434 49.4602 259.208 51.4473 260.094C56.4742 262.334 64.038 265.292 74.1209 268.121C93.4555 273.546 122.066 278.501 159.832 277.008C151.508 269.857 143.109 261.18 136.458 252.008C128.825 241.481 123.323 230.065 123.162 219.433C122.971 206.806 123.826 173.765 124.09 166.926C124.705 151.03 134.912 138.776 144.628 130.626C149.515 126.527 154.356 123.398 157.972 121.295C159.782 120.242 161.291 119.443 162.352 118.904C162.882 118.635 163.301 118.431 163.591 118.293C163.67 118.255 163.74 118.222 163.799 118.194C163.848 118.171 163.89 118.152 163.925 118.136C163.964 118.118 163.994 118.104 164.015 118.094L164.04 118.083L164.047 118.079L164.05 118.078C164.051 118.078 164.051 118.078 164.837 119.819ZM164.837 119.819L166.725 120.117L167.276 116.623L164.051 118.078L164.837 119.819ZM265.068 246.388C265.071 246.388 265.082 246.402 265.097 246.428C265.073 246.401 265.066 246.388 265.068 246.388Z\"\n                :fill=\"hairColor\"\n                stroke=\"black\"\n                stroke-width=\"3.82184\"\n            />\n            <path\n                d=\"M250 89C250.5 93.5 249.7 102.5 248.5 108.5\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"hair === 'turban'\">\n            <path\n                d=\"M281.726 131.791C281.726 65.702 245.268 21.0001 200.859 21C143.966 21 86 42.3414 86 143.254C86 168.223 96.6589 186.827 111.564 200.54C110.07 198.671 108.867 196.996 108.067 195.619C105.176 168.638 137.233 147.929 168.601 127.665C185.254 116.907 201.712 106.275 212.646 94.8956C222.24 100.332 250.44 123.109 255.813 132.32C258.695 137.26 263.322 154.189 266.484 173.95C276.822 161.532 281.726 149.107 281.726 131.791Z\"\n                :fill=\"hairColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M213.264 94.2457C226.438 82.3013 246.146 55.0399 244.881 37.334\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Hair',\n        props: {\n            hair: props.hair,\n            hairColor: props.hairColor\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"nose === 'curve'\">\n            <path\n                d=\"M203.687 173.056C203.89 176.899 205.385 185.138 209.735 187.354C215.174 190.124 210.91 199.306 200.729 198.718\"\n                stroke=\"#171921\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"nose === 'pointed'\">\n            <path\n                d=\"M203.13 169.093C205.079 182.957 213.541 192.876 213.541 192.876C213.541 192.876 210.91 199.305 200.729 198.716\"\n                stroke=\"#171921\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-else-if=\"nose === 'round'\">\n            <path\n                d=\"M200.277 178.926C205.497 176.94 214.601 177.54 214.04 187.639C213.542 196.615 204.333 198.397 201.4 196.304\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Nose',\n        props: {\n            nose: props.nose\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"glasses === 'round'\">\n            <circle\n                cx=\"234.5\"\n                cy=\"159\"\n                r=\"26\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <circle\n                cx=\"167.5\"\n                cy=\"168\"\n                r=\"26\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M209.5 166C209.5 163.878 208.657 161.843 207.157 160.343C205.657 158.843 203.622 158 201.5 158C199.378 158 197.343 158.843 195.843 160.343C194.343 161.843 193.5 163.878 193.5 166\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path d=\"M142 170L112 175.5\" stroke=\"black\" stroke-width=\"4\" />\n        </template>\n\n        <template v-if=\"glasses === 'square'\">\n            <path\n                d=\"M145.019 168.713L112 174.592\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linecap=\"round\"\n            />\n            <path\n                d=\"M146.443 147.609L182.685 142.886C185.971 142.458 189.038 144.767 189.534 148.043L194.595 181.434C195.092 184.71 192.831 187.713 189.545 188.141L157.161 192.361C154.139 192.755 151.254 190.827 150.455 187.878L141.535 154.99C140.594 151.521 142.888 148.072 146.443 147.609Z\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M251.226 134.137L214.984 138.86C211.699 139.288 209.437 142.291 209.934 145.567L214.995 178.958C215.492 182.234 218.558 184.543 221.844 184.115L254.228 179.895C257.25 179.501 259.45 176.91 259.342 173.872L258.139 139.978C258.012 136.403 254.782 133.674 251.226 134.137Z\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M191.916 163.944L212.972 160.838\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Glasses',\n        props: {\n            glasses: props.glasses\n        }\n    })\n</script>\n","<template>\n    <g>\n        <template v-if=\"shirt === 'collared'\">\n            <path\n                d=\"M189.771 359.578C189.771 359.578 189.771 359.578 191 358L189.771 359.578L191.493 360.919L192.679 359.087L192.679 359.087L192.681 359.084L192.69 359.07L192.731 359.007C192.742 358.99 192.755 358.971 192.769 358.949C192.803 358.897 192.847 358.832 192.9 358.753C193.05 358.528 193.275 358.195 193.57 357.77C194.158 356.919 195.023 355.702 196.118 354.246C198.312 351.332 201.416 347.482 205.071 343.718C208.737 339.945 212.898 336.318 217.198 333.793C221.514 331.26 225.777 329.949 229.733 330.483C272.171 336.205 303.402 355.002 323.674 383.001H50.3745C66.6742 353.659 89.8579 334.983 127.445 326.413C129.046 326.047 131.224 326.158 133.947 326.791C136.642 327.418 139.715 328.519 143.028 329.976C149.655 332.889 157.052 337.136 164.004 341.536C170.945 345.93 177.39 350.443 182.104 353.86C184.459 355.567 186.379 357 187.709 358.004C188.374 358.506 188.891 358.901 189.241 359.169C189.416 359.304 189.55 359.407 189.639 359.475L189.739 359.553L189.764 359.572L189.77 359.577L189.771 359.578Z\"\n                :fill=\"shirtColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M115.613 329.085L120.779 309.853C120.989 309.074 121.996 308.854 122.54 309.449C137.403 325.714 156.16 325.076 162.385 324.33C163.23 324.228 163.892 325.153 163.495 325.906L150.338 350.859C150.136 351.241 149.724 351.452 149.3 351.364C145.352 350.541 125.677 345.732 115.729 329.867C115.583 329.635 115.542 329.35 115.613 329.085Z\"\n                :fill=\"shirtColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M246.195 328.981L234.615 309.499C234.222 308.837 233.253 308.848 232.834 309.494C227.097 318.33 217.202 322.4 213.742 323.602C213.12 323.819 212.835 324.558 213.171 325.125L226.673 347.94C226.875 348.281 227.255 348.465 227.636 348.357C229.771 347.749 237.096 344.685 246.182 330.021C246.378 329.706 246.385 329.3 246.195 328.981Z\"\n                :fill=\"shirtColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M172.5 346.5L163.5 325L156.5 340L172.5 346.5Z\"\n                fill=\"black\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linejoin=\"round\"\n            />\n            <path\n                d=\"M204 345.5L213 324L220 339L204 345.5Z\"\n                fill=\"black\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linejoin=\"round\"\n            />\n            <path\n                d=\"M133.5 306L121.5 309L131.5 315.5L133.5 306Z\"\n                fill=\"black\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linejoin=\"round\"\n            />\n            <path\n                d=\"M223 306L234 309L227 315.5L223 306Z\"\n                fill=\"black\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n                stroke-linejoin=\"round\"\n            />\n        </template>\n\n        <template v-if=\"shirt === 'crew'\">\n            <path\n                d=\"M323.694 383H50.3745C66.6742 353.658 89.8579 334.982 127.445 326.412C143.458 322.761 162.113 320.939 184 320.939C193.456 320.939 200.814 322.382 207.796 324.285C210.383 324.99 212.983 325.78 215.643 326.589C220.045 327.927 224.611 329.314 229.552 330.449L229.692 330.481L229.836 330.493C275.961 334.297 303.62 354.785 323.694 383Z\"\n                :fill=\"shirtColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n            <path\n                d=\"M115.931 328.581L125.084 308.984C125.302 308.516 125.846 308.293 126.333 308.465C164.259 321.89 198.762 320.945 230.736 312.044C231.139 311.932 231.569 312.081 231.815 312.418L245.747 331.47C246.13 331.994 245.935 332.732 245.331 332.97C211.724 346.166 148.663 343.923 116.415 329.904C115.904 329.681 115.694 329.086 115.931 328.581Z\"\n                :fill=\"shirtColor\"\n                stroke=\"black\"\n                stroke-width=\"4\"\n            />\n        </template>\n\n        <template v-if=\"shirt === 'open'\">\n            <path\n                d=\"M323.366 382.863H50.4563C50.4907 382.793 50.5255 382.722 50.5604 382.651C55.1052 373.395 63.4899 356.319 74.4025 341.041C80.5961 332.37 87.5303 324.387 94.9416 318.772C102.354 313.156 110.061 310.04 117.892 310.726C132.946 312.043 146.355 320.285 159.817 328.56C161.092 329.344 162.368 330.129 163.646 330.908C178.131 339.735 193.005 347.931 209.365 344.345C214.899 343.131 218.629 340.535 220.976 337.18C223.29 333.873 224.122 330.029 224.266 326.517C224.41 322.999 223.871 319.674 223.311 317.256C223.049 316.126 222.779 315.179 222.564 314.484C226.189 310.835 230.027 308.71 233.989 307.753C238.284 306.716 242.876 307.016 247.707 308.445C257.437 311.323 267.847 318.697 278.007 328.179C296.621 345.552 313.7 369.323 323.366 382.863Z\"\n                :fill=\"shirtColor\"\n                stroke=\"black\"\n                stroke-width=\"4.27431\"\n            />\n        </template>\n    </g>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent } from 'vue'\n    import props from '../k-avatar.props'\n\n    export default defineComponent({\n        name: 'Shirt',\n        props: {\n            shirt: props.shirt,\n            shirtColor: props.shirtColor\n        }\n    })\n</script>\n","import { Chance } from 'chance'\n\nimport {\n    EYES,\n    EYEBROWS,\n    EAR,\n    EARRING,\n    MOUTH,\n    HAIR,\n    NOSE,\n    GLASSES,\n    BEARD,\n    SHIRT,\n    HAIR_COLORS,\n    BEARD_COLORS,\n    SHIRT_COLORS,\n    FACE_COLORS\n} from '../k-avatar.types'\n\nexport default class Makeup {\n    chance: any\n\n    constructor(name: string) {\n        this.chance = new Chance(name)\n    }\n\n    _faceColor() {\n        return this.chance.shuffle(FACE_COLORS)[0]\n    }\n\n    _hairColor() {\n        return this.chance.shuffle(HAIR_COLORS)[0]\n    }\n\n    _beardColor() {\n        return this.chance.shuffle(BEARD_COLORS)[0]\n    }\n\n    _shirtColor() {\n        return this.chance.shuffle(SHIRT_COLORS)[0]\n    }\n\n    _eye() {\n        return this.chance.shuffle(EYES)[0]\n    }\n\n    _eyeBrow() {\n        return this.chance.shuffle(EYEBROWS)[0]\n    }\n\n    _ear() {\n        return this.chance.shuffle(EAR)[0]\n    }\n\n    _earRing() {\n        return this.chance.shuffle(EARRING)[0]\n    }\n\n    _mouth() {\n        return this.chance.shuffle(MOUTH)[0]\n    }\n\n    _hair() {\n        return this.chance.shuffle(HAIR)[0]\n    }\n\n    _nose() {\n        return this.chance.shuffle(NOSE)[0]\n    }\n\n    _glasses() {\n        return this.chance.shuffle(GLASSES)[0]\n    }\n\n    _beard() {\n        return this.chance.shuffle(BEARD)[0]\n    }\n\n    _shirt() {\n        return this.chance.shuffle(SHIRT)[0]\n    }\n\n    makeup() {\n        return {\n            faceColor: this._faceColor(),\n            eye: this._eye(),\n            eyeBrow: this._eyeBrow(),\n            ear: this._ear(),\n            earRing: this._earRing(),\n            mouth: this._mouth(),\n            hair: this._hair(),\n            hairColor: this._hairColor(),\n            nose: this._nose(),\n            glasses: this._glasses(),\n            beard: this._beard(),\n            beardColor: this._beardColor(),\n            shirt: this._shirt(),\n            shirtColor: this._shirtColor()\n        }\n    }\n}\n","<template>\n    <div>\n        <k-tooltip :title=\"name\" :visible=\"visible\">\n            <svg\n                :width=\"size\"\n                :height=\"size\"\n                viewBox=\"0 0 380 380\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                :class=\"{\n                    'rounded-xl overflow-hidden': type === 'square',\n                    'rounded-full overflow-hidden': type === 'circle'\n                }\"\n            >\n                <rect\n                    v-if=\"type === 'square'\"\n                    height=\"380\"\n                    width=\"380\"\n                    :fill=\"bgColor\"\n                />\n                <circle v-else cx=\"190\" cy=\"190\" r=\"190\" :fill=\"bgColor\" />\n                <mask\n                    id=\"mask0\"\n                    mask-type=\"alpha\"\n                    maskUnits=\"userSpaceOnUse\"\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"380\"\n                    height=\"380\"\n                >\n                    <rect\n                        v-if=\"type === 'square'\"\n                        height=\"380\"\n                        width=\"380\"\n                        fill=\"#FFEDEF\"\n                    />\n                    <circle v-else cx=\"190\" cy=\"190\" r=\"190\" fill=\"#FFEDEF\" />\n                </mask>\n                <g mask=\"url(#mask0)\">\n                    <Face\n                        :face-color=\"avatar.faceColor\"\n                        :beard=\"avatar.beard\"\n                        :beard-color=\"avatar.beardColor\"\n                    />\n                    <Mouth :mouth=\"avatar.mouth\" />\n                    <EyeBrows :eye-brow=\"avatar.eyeBrow\" />\n                    <Hair :hair=\"avatar.hair\" :hair-color=\"avatar.hairColor\" />\n                    <Eyes :eye=\"avatar.eye\" />\n                    <Glasses :glasses=\"avatar.glasses\" />\n                    <Nose :nose=\"avatar.nose\" />\n                    <Ear :ear=\"avatar.ear\" :face-color=\"avatar.faceColor\" />\n                    <Earring :ear=\"avatar.ear\" :earring=\"avatar.earRing\" />\n                    <Shirt\n                        :shirt=\"avatar.shirt\"\n                        :shirt-color=\"avatar.shirtColor\"\n                    />\n                </g>\n                <defs>\n                    <clipPath id=\"clip0\">\n                        <rect\n                            width=\"200\"\n                            height=\"320\"\n                            fill=\"white\"\n                            transform=\"translate(90 43)\"\n                        />\n                    </clipPath>\n                </defs>\n            </svg>\n        </k-tooltip>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import { defineComponent, computed } from 'vue'\n    import { BG_COLORS } from './k-avatar.types'\n\n    import Eyes from './parts/eyes.vue'\n    import EyeBrows from './parts/eye-brows.vue'\n    import Face from './parts/face.vue'\n    import Ear from './parts/ear.vue'\n    import Earring from './parts/earring.vue'\n    import Mouth from './parts/mouth.vue'\n    import Hair from './parts/hair.vue'\n    import Nose from './parts/nose.vue'\n    import Glasses from './parts/glasses.vue'\n    import Shirt from './parts/shirt.vue'\n\n    import Makeup from './lib/makeup'\n\n    export default defineComponent({\n        name: 'KAvatar',\n        autoload: true,\n        components: {\n            Shirt,\n            Glasses,\n            Hair,\n            Mouth,\n            Face,\n            EyeBrows,\n            Eyes,\n            Ear,\n            Earring,\n            Nose\n        },\n        props: {\n            name: {\n                type: String,\n                default: '???',\n                required: true,\n                description: 'Nombre del avatar'\n            },\n            size: {\n                type: Number,\n                default: 120,\n                description: 'Tamaño del avatar'\n            },\n            square: {\n                type: Boolean,\n                default: true,\n                description: 'Define un estilo cuadrado'\n            },\n            circle: {\n                type: Boolean,\n                default: false,\n                description: 'Define un estilo circular'\n            },\n            bgColor: {\n                default: BG_COLORS[4],\n                type: String,\n                description: 'Color de fondo del avatar'\n            },\n            tooltip: {\n                type: Boolean,\n                default: true,\n                description: 'Define si se muestra el tooltip'\n            }\n        },\n        setup(props) {\n            const avatar = computed(() => {\n                const a = new Makeup(props.name)\n                return a.makeup()\n            })\n\n            const type = computed(() => {\n                return props.circle ? 'circle' : 'square'\n            })\n\n            const visible = computed(() => {\n                return props.tooltip === false ? false : undefined\n            })\n\n            return { avatar, type, visible }\n        }\n    })\n</script>\n\n<style scoped></style>\n"],"names":["FACE_COLORS","EYES","EYEBROWS","GLASSES","EAR","EARRING","MOUTH","BEARD","BEARD_COLORS","HAIR","HAIR_COLORS","NOSE","SHIRT","SHIRT_COLORS","BG_COLORS","props","value","_sfc_main$b","defineComponent","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_createElementBlock","_openBlock","_Fragment","_sfc_main$a","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_sfc_main$9","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","_hoisted_103","_hoisted_104","_hoisted_105","_hoisted_106","_hoisted_107","_hoisted_108","_sfc_main$8","Beard","_component_Beard","_resolveComponent","_sfc_main$7","_sfc_main$6","_sfc_main$5","_sfc_main$4","_sfc_main$3","_createCommentVNode","_sfc_main$2","_sfc_main$1","Makeup","name","__publicField","Chance","__name","_sfc_main","Shirt","Glasses","Hair","Mouth","Face","EyeBrows","Eyes","Ear","Earring","Nose","avatar","computed","type","visible","_createVNode","_component_k_tooltip","_withCtx","_component_Face","_component_Mouth","_component_EyeBrows","_component_Hair","_component_Eyes","_component_Glasses","_component_Nose","_component_Ear","_component_Earring","_component_Shirt"],"mappings":"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"}