{"version":3,"file":"k-checkbox.9b4403a3.js","sources":["../../src/components/data-entry/k-checkbox/k-checkbox.vue"],"sourcesContent":["<template>\n    <div class=\"flex items-center\">\n        <input\n            :id=\"inputId\"\n            :checked=\"model === value\"\n            :value=\"value\"\n            type=\"checkbox\"\n            class=\"k-checkbox w-4 h-4 border-gray-300 rounded dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n            :class=\"classes\"\n            @change=\"change\"\n        />\n\n        <label\n            v-if=\"label || hasSlot('default')\"\n            :for=\"inputId\"\n            class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300 select-none\"\n        >\n            <template v-if=\"hasSlot('default')\">\n                <slot></slot>\n            </template>\n            <template v-else>\n                {{ label }}\n            </template>\n        </label>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import { computed, defineComponent } from 'vue'\n    import { uid, colors } from '@/helpers/utils'\n\n    export default defineComponent({\n        name: 'KCheckbox',\n        props: {\n            modelValue: {\n                type: [String, Number, Boolean, Object, Array, Symbol],\n                default: false\n            },\n            value: {\n                type: [String, Number, Boolean, Object, Array, Symbol],\n                default: true\n            },\n            unckeckedValue: {\n                type: [String, Number, Boolean, Object, Array, Symbol],\n                default: false\n            },\n            label: {\n                type: String,\n                default: ''\n            },\n            color: {\n                type: String,\n                control: 'inline-radio',\n                options: colors,\n                validator: (val: string) => colors.includes(val),\n                default: 'primary',\n                description: 'Color del botÃ³n'\n            }\n        },\n        emits: ['update:modelValue'],\n        setup(props, ctx) {\n            const inputId = uid()\n            const hasSlot = (name: string) => !!ctx.slots[name]\n\n            const classes = computed(() => {\n                let classes = []\n\n                if (props.color === 'white' || props.color === 'black') {\n                    classes.push(\n                        'text-black focus:ring-black dark:focus:ring-white dark:text-black k-checkbox-inverse'\n                    )\n                } else if (props.color === 'gray') {\n                    classes.push(\n                        'text-gray-300 focus:ring-gray-300 dark:focus:ring-gray-300'\n                    )\n                } else if (props.color === 'primary') {\n                    classes.push(\n                        'text-primary focus:ring-primary dark:focus:ring-primary'\n                    )\n                } else if (props.color === 'secondary') {\n                    classes.push(\n                        'text-secondary focus:ring-secondary dark:focus:ring-secondary'\n                    )\n                } else if (props.color === 'success') {\n                    classes.push(\n                        'text-success focus:ring-success dark:focus:ring-success'\n                    )\n                } else if (props.color === 'warning') {\n                    classes.push(\n                        'text-warning focus:ring-warning dark:focus:ring-warning'\n                    )\n                } else if (props.color === 'danger') {\n                    classes.push(\n                        'text-danger focus:ring-danger dark:focus:ring-danger'\n                    )\n                } else if (props.color === 'info') {\n                    classes.push(\n                        'text-info focus:ring-info dark:focus:ring-info'\n                    )\n                }\n\n                return classes\n            })\n\n            const change = (e: any) => {\n                model.value = e.target.checked\n                    ? props.value\n                    : props.unckeckedValue\n            }\n\n            const model = computed({\n                get() {\n                    return props.modelValue\n                },\n                set(value) {\n                    ctx.emit('update:modelValue', value)\n                }\n            })\n\n            return { model, hasSlot, inputId, classes, change }\n        }\n    })\n</script>\n\n<style scoped lang=\"scss\">\n    .dark .k-checkbox.k-checkbox-inverse:checked {\n        filter: invert(1);\n    }\n</style>\n"],"names":["_sfc_main","defineComponent","colors","val","props","ctx","inputId","uid","hasSlot","__name","name","classes","computed","change","e","model","value","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","args","_hoisted_2","_renderSlot","_Fragment"],"mappings":"wSA+BI,MAAAA,EAAeC,EAAgB,CAC3B,KAAM,YACN,MAAO,CACH,WAAY,CACR,KAAM,CAAC,OAAQ,OAAQ,QAAS,OAAQ,MAAO,MAAM,EACrD,QAAS,EACb,EACA,MAAO,CACH,KAAM,CAAC,OAAQ,OAAQ,QAAS,OAAQ,MAAO,MAAM,EACrD,QAAS,EACb,EACA,eAAgB,CACZ,KAAM,CAAC,OAAQ,OAAQ,QAAS,OAAQ,MAAO,MAAM,EACrD,QAAS,EACb,EACA,MAAO,CACH,KAAM,OACN,QAAS,EACb,EACA,MAAO,CACH,KAAM,OACN,QAAS,eACT,QAASC,EACT,UAAYC,GAAgBD,EAAO,SAASC,CAAG,EAC/C,QAAS,UACT,YAAa,oBACjB,CACJ,EACA,MAAO,CAAC,mBAAmB,EAC3B,MAAMC,EAAOC,EAAK,CACd,MAAMC,EAAUC,IACVC,EAAUC,EAACC,GAAiB,CAAC,CAACL,EAAI,MAAMK,GAA9B,WAEVC,EAAUC,EAAS,IAAM,CAC3B,IAAID,EAAU,CAAA,EAEd,OAAIP,EAAM,QAAU,SAAWA,EAAM,QAAU,QAC3CO,EAAQ,KACJ,sFAAA,EAEGP,EAAM,QAAU,OACvBO,EAAQ,KACJ,4DAAA,EAEGP,EAAM,QAAU,UACvBO,EAAQ,KACJ,yDAAA,EAEGP,EAAM,QAAU,YACvBO,EAAQ,KACJ,+DAAA,EAEGP,EAAM,QAAU,UACvBO,EAAQ,KACJ,yDAAA,EAEGP,EAAM,QAAU,UACvBO,EAAQ,KACJ,yDAAA,EAEGP,EAAM,QAAU,SACvBO,EAAQ,KACJ,sDAAA,EAEGP,EAAM,QAAU,QACvBO,EAAQ,KACJ,gDAAA,EAIDA,CAAA,CACV,EAEKE,EAASJ,EAACK,GAAW,CACvBC,EAAM,MAAQD,EAAE,OAAO,QACjBV,EAAM,MACNA,EAAM,cAAA,EAHD,UAMTW,EAAQH,EAAS,CACnB,KAAM,CACF,OAAOR,EAAM,UACjB,EACA,IAAIY,EAAO,CACHX,EAAA,KAAK,oBAAqBW,CAAK,CACvC,CAAA,CACH,EAED,MAAO,CAAE,MAAAD,EAAO,QAAAP,EAAS,QAAAF,EAAS,QAAAK,EAAS,OAAAE,CAAO,CACtD,CACJ,CAAC,oFAvHGI,EAQEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAPOC,EAAO,EAAAC,EAAA,MAAAC,EAAA,CAAAC,EACF,QAAU,CACnB,GAAOT,EAAA,QACR,QAAKA,EAAU,QAAAA,EAAA,MACf,MAAKA,EAAA,MAEJ,KAAA,WAAA,MAAAU,EAAA,CAAA,0HAAAV,EAAA,OAAA,CAAA,EAIK,SAAKC,EAAI,KAAOA,EAAA,GAAA,IAAAU,IAAAX,EAAA,QAAAA,EAAA,OAAA,GAAAW,CAAA,EAAA,EAD1B,KAAA,GAAAC,CAAA,EAAAZ,EAAA,OAAAA,EAAA,QAAA,SAAA,GAAAM,EAAA,EAEiBC,EAAA,QAAA,CACb,IAAK,EAAA,IAAAP,EAAA,QAEW,MAAA,uEAAA,EAAA,CAGhBA,EAAA,QAAA,SAAA,EAAAa,EAAAb,EAAA,OAAA,UACO,CAAK,IAAA,CAAA,EAAA,OAAA,EAAA,GAAAM,EAAA,EAAAC,EAAAO,EAAA,CAAA,IAAA,GAAA,yCAnBhBvB,EAAAQ,EAAA"}