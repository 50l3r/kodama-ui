{"version":3,"file":"k-drawer.33b315de.js","sources":["../../src/components/data-display/k-drawer/k-drawer.vue"],"sourcesContent":["<template>\n    <div\n        :id=\"drawerId\"\n        class=\"fixed z-40 max-w-full p-4 transition-transform bg-white dark:bg-gray-800\"\n        tabindex=\"-1\"\n        :class=\"classes\"\n        :style=\"styles\"\n    >\n        <div class=\"flex flex-col h-full\">\n            <div\n                class=\"flex flex-row items-center border-b dark:border-gray-600 mb-4 pb-4 justify-between -mx-4 px-4\"\n            >\n                <template v-if=\"hasSlot('header')\">\n                    <slot name=\"header\"></slot>\n                </template>\n                <h5\n                    v-else\n                    class=\"text-base font-semibold text-gray-500 dark:text-gray-400 overflow-hidden\"\n                >\n                    {{ title }}\n                </h5>\n\n                <k-button\n                    icon=\"times\"\n                    color=\"black\"\n                    neon\n                    size=\"md\"\n                    @click=\"hide\"\n                />\n            </div>\n\n            <div class=\"flex flex-1\">\n                <slot></slot>\n            </div>\n\n            <div\n                v-if=\"hasSlot('footer')\"\n                class=\"flex flex-row items-center border-t dark:border-gray-600 justify-between p-4 -mx-4 mt-auto\"\n            >\n                <slot name=\"footer\"></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\n    import { uid } from '@/helpers/utils'\n    import { computed } from '@vue/reactivity'\n    import { Drawer, DrawerOptions } from 'flowbite'\n    import { defineComponent, onMounted, Ref, ref, watch } from 'vue'\n\n    export default defineComponent({\n        name: 'KDrawer',\n        props: {\n            modelValue: {\n                type: Boolean,\n                default: false\n            },\n            title: {\n                type: String,\n                default: 'Drawer'\n            },\n            placement: {\n                type: String as () => DrawerOptions['placement'],\n                default: 'right',\n                options: ['right', 'left', 'top', 'bottom']\n            },\n            backdrop: {\n                type: Boolean,\n                default: true\n            },\n            width: {\n                type: Number,\n                default: 360,\n                description: 'Ancho del drawer en `px`'\n            }\n        },\n        emits: ['update:modelValue'],\n        setup(props, ctx) {\n            const drawerId = uid()\n            const drawer: Ref<Drawer | null> = ref(null)\n            const hasSlot = (name: string) => !!ctx.slots[name]\n\n            // options with default values\n            const options: DrawerOptions = {\n                placement: props.placement,\n                backdrop: props.backdrop,\n                bodyScrolling: false,\n                edge: false,\n                edgeOffset: '',\n                backdropClasses:\n                    'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-30',\n                onShow: () => {\n                    ctx.emit('update:modelValue', true)\n                },\n                onHide: () => {\n                    ctx.emit('update:modelValue', false)\n                }\n            }\n\n            const classes = computed(() => {\n                if (props.placement === 'right') {\n                    return 'top-0 right-0 h-screen overflow-y-auto translate-x-full'\n                } else if (props.placement === 'left') {\n                    return 'top-0 left-0 h-screen overflow-y-auto -translate-x-full'\n                } else if (props.placement === 'top') {\n                    return 'top-0 left-0 right-0 w-full -translate-y-full '\n                } else if (props.placement === 'bottom') {\n                    return 'bottom-0 left-0 right-0 w-full overflow-y-auto transform-none'\n                }\n            })\n\n            const styles = computed(() => {\n                if (props.placement === 'right' || props.placement === 'left') {\n                    return {\n                        width: `${props.width}px`\n                    }\n                }\n\n                return {}\n            })\n\n            const hide = () => {\n                ctx.emit('update:modelValue', false)\n            }\n\n            onMounted(() => {\n                const $targetEl = document.getElementById(drawerId)\n                if ($targetEl) {\n                    const $parentEl = $targetEl.parentNode\n\n                    if ($parentEl) {\n                        $parentEl.removeChild($targetEl)\n                        document\n                            .getElementsByTagName('body')[0]\n                            .appendChild($targetEl)\n\n                        drawer.value = new Drawer($targetEl, options)\n\n                        if (props.modelValue) {\n                            drawer.value?.show()\n                        }\n                    }\n                }\n            })\n\n            watch(\n                () => props.modelValue,\n                (value) => {\n                    if (value) {\n                        drawer.value?.show()\n                    } else {\n                        drawer.value?.hide()\n                    }\n\n                    ctx.emit('update:modelValue', value)\n                }\n            )\n\n            return { drawerId, hide, hasSlot, classes, styles }\n        }\n    })\n</script>\n\n<style scoped></style>\n"],"names":["_sfc_main","defineComponent","props","ctx","drawerId","uid","drawer","ref","hasSlot","__name","name","options","classes","computed","styles","hide","onMounted","$targetEl","$parentEl","Drawer","_a","watch","value","_b","_hoisted_1","_hoisted_4","_hoisted_6","_resolveComponent","_openBlock","_createElementBlock","_ctx","_normalizeClass","_normalizeStyle","_createElementVNode","_hoisted_2","_hoisted_3","_renderSlot","_toDisplayString","_createVNode","_component_k_button"],"mappings":"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"}