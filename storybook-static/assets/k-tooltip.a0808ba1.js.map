{"version":3,"file":"k-tooltip.a0808ba1.js","sources":["../../src/components/data-display/k-tooltip/k-tooltip.vue","../../src/components/data-display/k-tooltip/k-tooltip.vue"],"sourcesContent":["<template>\r\n    <span :id=\"buttonId\">\r\n        <slot></slot>\r\n    </span>\r\n\r\n    <div\r\n        :id=\"tooltipId\"\r\n        role=\"tooltip\"\r\n        class=\"absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700\"\r\n    >\r\n        <template v-if=\"hasSlot('content')\">\r\n            <slot name=\"content\"></slot>\r\n        </template>\r\n        <template v-else>\r\n            {{ title }}\r\n        </template>\r\n\r\n        <div v-if=\"arrow\" class=\"tooltip-arrow\" data-popper-arrow></div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, onMounted, ref, Ref, watch } from 'vue'\r\n    import { Tooltip } from 'flowbite'\r\n    import type { TooltipOptions } from 'flowbite'\r\n    import { uid } from '../../../helpers/utils'\r\n\r\n    export default defineComponent({\r\n        name: 'KTooltip',\r\n        props: {\r\n            title: {\r\n                type: String,\r\n                default: 'Tooltip'\r\n            },\r\n            placement: {\r\n                type: String as () => TooltipOptions['placement'],\r\n                default: 'top',\r\n                options: ['top', 'bottom', 'left', 'right']\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            click: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            arrow: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            visible: {\r\n                type: Boolean,\r\n                default: undefined\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        setup(props, { slots }) {\r\n            const tooltipId = uid()\r\n            const buttonId = uid()\r\n\r\n            const tooltip: Ref<Tooltip | null> = ref(null)\r\n            const hasSlot = (name: string) => !!slots[name]\r\n\r\n            const method =\r\n                props.visible !== undefined\r\n                    ? 'none'\r\n                    : props.click\r\n                    ? 'click'\r\n                    : props.hover\r\n                    ? 'hover'\r\n                    : 'none'\r\n\r\n            const options: TooltipOptions = {\r\n                placement: props.placement,\r\n                triggerType: method,\r\n                onShow: () => {\r\n                    if (props.disabled) {\r\n                        tooltip.value?.hide()\r\n                    }\r\n                }\r\n            }\r\n\r\n            const init = () => {\r\n                const $targetEl = document.getElementById(tooltipId)\r\n                const $triggerEl = document.getElementById(buttonId)\r\n\r\n                tooltip.value = new Tooltip($targetEl, $triggerEl, options)\r\n            }\r\n\r\n            onMounted(() => {\r\n                init()\r\n            })\r\n\r\n            watch(\r\n                () => props.visible,\r\n                (value) => {\r\n                    if (value) {\r\n                        tooltip.value?.show()\r\n                    } else {\r\n                        tooltip.value?.hide()\r\n                    }\r\n                }\r\n            )\r\n\r\n            return { tooltipId, buttonId, hasSlot }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped></style>\r\n","<template>\r\n    <span :id=\"buttonId\">\r\n        <slot></slot>\r\n    </span>\r\n\r\n    <div\r\n        :id=\"tooltipId\"\r\n        role=\"tooltip\"\r\n        class=\"absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700\"\r\n    >\r\n        <template v-if=\"hasSlot('content')\">\r\n            <slot name=\"content\"></slot>\r\n        </template>\r\n        <template v-else>\r\n            {{ title }}\r\n        </template>\r\n\r\n        <div v-if=\"arrow\" class=\"tooltip-arrow\" data-popper-arrow></div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, onMounted, ref, Ref, watch } from 'vue'\r\n    import { Tooltip } from 'flowbite'\r\n    import type { TooltipOptions } from 'flowbite'\r\n    import { uid } from '../../../helpers/utils'\r\n\r\n    export default defineComponent({\r\n        name: 'KTooltip',\r\n        props: {\r\n            title: {\r\n                type: String,\r\n                default: 'Tooltip'\r\n            },\r\n            placement: {\r\n                type: String as () => TooltipOptions['placement'],\r\n                default: 'top',\r\n                options: ['top', 'bottom', 'left', 'right']\r\n            },\r\n            hover: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            click: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            arrow: {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n            visible: {\r\n                type: Boolean,\r\n                default: undefined\r\n            },\r\n            disabled: {\r\n                type: Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        setup(props, { slots }) {\r\n            const tooltipId = uid()\r\n            const buttonId = uid()\r\n\r\n            const tooltip: Ref<Tooltip | null> = ref(null)\r\n            const hasSlot = (name: string) => !!slots[name]\r\n\r\n            const method =\r\n                props.visible !== undefined\r\n                    ? 'none'\r\n                    : props.click\r\n                    ? 'click'\r\n                    : props.hover\r\n                    ? 'hover'\r\n                    : 'none'\r\n\r\n            const options: TooltipOptions = {\r\n                placement: props.placement,\r\n                triggerType: method,\r\n                onShow: () => {\r\n                    if (props.disabled) {\r\n                        tooltip.value?.hide()\r\n                    }\r\n                }\r\n            }\r\n\r\n            const init = () => {\r\n                const $targetEl = document.getElementById(tooltipId)\r\n                const $triggerEl = document.getElementById(buttonId)\r\n\r\n                tooltip.value = new Tooltip($targetEl, $triggerEl, options)\r\n            }\r\n\r\n            onMounted(() => {\r\n                init()\r\n            })\r\n\r\n            watch(\r\n                () => props.visible,\r\n                (value) => {\r\n                    if (value) {\r\n                        tooltip.value?.show()\r\n                    } else {\r\n                        tooltip.value?.hide()\r\n                    }\r\n                }\r\n            )\r\n\r\n            return { tooltipId, buttonId, hasSlot }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"names":["_sfc_main","defineComponent","props","slots","tooltipId","uid","buttonId","tooltip","ref","hasSlot","__name","name","method","options","_a","init","$targetEl","$triggerEl","Tooltip","onMounted","watch","value","_b","_hoisted_3","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_renderSlot","_hoisted_1","_createTextVNode","_toDisplayString"],"mappings":"0VA2BI,MAAAA,EAAeC,EAAgB,CAC3B,KAAM,WACN,MAAO,CACH,MAAO,CACH,KAAM,OACN,QAAS,SACb,EACA,UAAW,CACP,KAAM,OACN,QAAS,MACT,QAAS,CAAC,MAAO,SAAU,OAAQ,OAAO,CAC9C,EACA,MAAO,CACH,KAAM,QACN,QAAS,EACb,EACA,MAAO,CACH,KAAM,QACN,QAAS,EACb,EACA,MAAO,CACH,KAAM,QACN,QAAS,EACb,EACA,QAAS,CACL,KAAM,QACN,QAAS,MACb,EACA,SAAU,CACN,KAAM,QACN,QAAS,EACb,CACJ,EACA,MAAMC,EAAO,CAAE,MAAAC,GAAS,CACpB,MAAMC,EAAYC,IACZC,EAAWD,IAEXE,EAA+BC,EAAI,IAAI,EACvCC,EAAUC,EAACC,GAAiB,CAAC,CAACR,EAAMQ,GAA1B,WAEVC,EACFV,EAAM,UAAY,OACZ,OACAA,EAAM,MACN,QACAA,EAAM,MACN,QACA,OAEJW,EAA0B,CAC5B,UAAWX,EAAM,UACjB,YAAaU,EACb,OAAQ,IAAM,OACNV,EAAM,YACNY,EAAAP,EAAQ,QAAR,MAAAO,EAAe,OAEvB,CAAA,EAGEC,EAAOL,EAAA,IAAM,CACT,MAAAM,EAAY,SAAS,eAAeZ,CAAS,EAC7Ca,EAAa,SAAS,eAAeX,CAAQ,EAEnDC,EAAQ,MAAQ,IAAIW,EAAQF,EAAWC,EAAYJ,CAAO,CAAA,EAJjD,QAOb,OAAAM,EAAU,IAAM,CACPJ,GAAA,CACR,EAEDK,EACI,IAAMlB,EAAM,QACXmB,GAAU,SACHA,GACAP,EAAAP,EAAQ,QAAR,MAAAO,EAAe,QAEfQ,EAAAf,EAAQ,QAAR,MAAAe,EAAe,MAEvB,CAAA,EAGG,CAAE,UAAAlB,EAAW,SAAAE,EAAU,QAAAG,EAClC,CACJ,CAAC,oBC7FqBc,EAAM,CAAgB,IAAA,EAAA,MAAA,iDAhB5CC,EAEOC,EAAAC,EAFAC,EAAIC,EAAQC,EAAAC,EAAA,QACfC,EAAa,EAAAC,EAAAC,EAAA,KAAA,CAAAC,EAAA,OAAA,CAAA,GAAAT,EAAA,QAAA,EAAA,CAGjBU,EAaMV,EAAA,OAAA,SAAA,CAAA,EAZD,EAAIW,CAAA,EACSF,EAAA,MAAA,CACd,GAAMT,EAAA,UAAA,KAAA,UAEU,MAAA,mLAAA,EAAA,CAGhBA,EAAA,QAAA,SAAA,EAAAU,EAAAV,EAAA,OAAA,UACO,CAAK,IAAA,CAAA,CAAA,GAAAM,IAAAC,EAAAC,EAAA,CAAA,IAAA,GAAA,CAGDI,EAAKC,EAAAb,EAAA,KAAA,EAAA,CAAA,CAAA,EAAA,EAAA,gDAhBpBf,EAAAc,EAAA"}