{"version":3,"file":"s-head.92084ec3.js","sources":["../../src/helpers/storybook.ts","../../.storybook/app/components/s-head.tsx"],"sourcesContent":["export function getReturnType(val: any) {\r\n    if (val === Boolean) {\r\n        return 'bool'\r\n    } else if (val === String) {\r\n        return 'string'\r\n    } else if (val === Number) {\r\n        return 'number'\r\n    } else if (val === Array) {\r\n        return 'array'\r\n    } else if (val === Object) {\r\n        return 'object'\r\n    } else {\r\n        return '???'\r\n    }\r\n}\r\n\r\nexport function getControlType(props: any): string {\r\n    const type = props.type\r\n    const control = props.control || null\r\n    const options = props.options || null\r\n\r\n    if (type === Boolean) {\r\n        return control || 'boolean'\r\n    } else if (type === String) {\r\n        return control || (options ? 'inline-radio' : 'text')\r\n    } else if (type === Number) {\r\n        return props.control || 'number'\r\n    } else if (Array.isArray(type)) {\r\n        return getControlType(type[0])\r\n    } else {\r\n        return 'text'\r\n    }\r\n}\r\n\r\ntype Control = {\r\n    type: string\r\n    options?: string[]\r\n    disable?: boolean\r\n    presetColors?: string[]\r\n}\r\n\r\nexport function parseControl(props: any, disabled = false, onlyType = false) {\r\n    const type = props.type\r\n    const control = props.control || null\r\n    const options = props.options || null\r\n    const presetColors = props.presetColors || null\r\n\r\n    const data: Control = { type: 'text', disable: disabled }\r\n\r\n    if (type === Boolean) {\r\n        data.type = control || 'boolean'\r\n    } else if (type === String) {\r\n        data.type = control || (options ? 'inline-radio' : 'text')\r\n    } else if (type === Number) {\r\n        data.type = props.control || 'number'\r\n    } else if (Array.isArray(type)) {\r\n        data.type = parseControl(type[0], disabled, true).toString()\r\n    } else {\r\n        return 'text'\r\n    }\r\n\r\n    if (options) {\r\n        data.options = options\r\n    }\r\n\r\n    if (presetColors) {\r\n        data.presetColors = presetColors\r\n    }\r\n\r\n    if (onlyType) return data.type\r\n\r\n    return data\r\n}\r\n\r\nexport function renderArgs(\r\n    component: any,\r\n    argTypes: Record<string, any> = {},\r\n    disabled = false\r\n) {\r\n    const props: Record<string, any> = {}\r\n\r\n    // Controls\r\n    for (let i = 0; i < Object.keys(component.props).length; i++) {\r\n        const name = Object.keys(component.props)[i]\r\n        const prop = component.props[name]\r\n\r\n        const nprop: any = {\r\n            description: prop.description,\r\n            type: { name: '', required: prop.required || false },\r\n            control: { type: 'text' },\r\n            table: {\r\n                defaultValue:\r\n                    prop.default !== undefined\r\n                        ? { summary: prop.default }\r\n                        : undefined,\r\n                type: { summary: '', required: prop.required || false },\r\n                disable: disabled\r\n            }\r\n        }\r\n\r\n        nprop.control = parseControl(prop, disabled)\r\n        nprop.type.name = parseControl(prop, disabled, true).toString()\r\n\r\n        // Table types\r\n        if (Array.isArray(prop.type)) {\r\n            const type = prop.type\r\n                .map((t: any) => {\r\n                    return getReturnType(t)\r\n                })\r\n                .join(' | ')\r\n\r\n            nprop.table.type.summary = type\r\n            // nprop.control.type = 'array'\r\n        } else {\r\n            nprop.table.type.summary = getReturnType(prop.type)\r\n        }\r\n\r\n        if (argTypes[name]) {\r\n            props[name] = { ...argTypes[name], ...nprop }\r\n        } else {\r\n            props[name] = nprop\r\n        }\r\n    }\r\n\r\n    // ACtions\r\n    const emits = component.emits\r\n\r\n    if (emits) {\r\n        for (let i = 0; i < emits.length; i++) {\r\n            const emit = emits[i]\r\n\r\n            if (emit === 'click') {\r\n                props.onClick = { action: 'clicked' }\r\n            }\r\n        }\r\n    }\r\n\r\n    return props\r\n}\r\n\r\nexport function renderParameters({ showPanel } = { showPanel: true }) {\r\n    return {\r\n        options: { showPanel: showPanel }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Head({ image, children }) {\r\n  return (\r\n    <div>\r\n        <div  className=\"justify-center items-center flex\" style={{\r\n            backgroundImage: `url(${image})`,\r\n            backgroundPosition: 'center center',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n            width: 'calc(100vw - 17px)',\r\n            height: '400px',\r\n            position: 'absolute',\r\n            left: 0,\r\n            top: 0\r\n        }}>\r\n            <div style={{\r\n                position: 'absolute',\r\n                content: ' ',\r\n                width: '100%',\r\n                height: '100%',\r\n                top: 0,\r\n                left: 0,\r\n                backgroundColor: 'rgba(0, 0, 0, 0.3)',\r\n                zIndex: 1,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n            }}>\r\n                <h2 style={{\r\n                    color: 'white',\r\n                    fontSize: '3rem',\r\n                    fontWeight: 'bold',\r\n                    zIndex: 2,\r\n                    textShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\r\n                }}>\r\n                    {children}\r\n                </h2>\r\n            </div>\r\n        </div>\r\n\r\n        <div style={{\r\n            position: 'relative',\r\n            marginTop: '400px',\r\n        }}>\r\n\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["getReturnType","val","__name","parseControl","props","disabled","onlyType","type","control","options","presetColors","data","renderArgs","component","argTypes","i","name","prop","nprop","t","emits","renderParameters","showPanel","Head","image","children","_jsx","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","width","height","position","left","top","content","backgroundColor","zIndex","display","justifyContent","alignItems","color","fontSize","fontWeight","textShadow","marginTop"],"mappings":"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"}