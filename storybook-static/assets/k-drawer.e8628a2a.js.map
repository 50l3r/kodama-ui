{"version":3,"file":"k-drawer.e8628a2a.js","sources":["../../src/components/data-display/k-drawer/k-drawer.vue","../../src/components/data-display/k-drawer/k-drawer.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :id=\"drawerId\"\r\n        class=\"fixed z-40 p-4 transition-transform bg-white dark:bg-gray-800\"\r\n        tabindex=\"-1\"\r\n        :class=\"classes\"\r\n    >\r\n        <div class=\"flex flex-col\">\r\n            <div\r\n                class=\"flex flex-row items-center border-b dark:border-gray-600 mb-4 pb-4 justify-between -mx-4 px-4\"\r\n            >\r\n                <div v-if=\"hasSlot('header')\">\r\n                    <slot name=\"header\"></slot>\r\n                </div>\r\n                <h5\r\n                    v-else\r\n                    class=\"text-base font-semibold text-gray-500 dark:text-gray-400\"\r\n                >\r\n                    {{ title }}\r\n                </h5>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg w-8 h-8 text-sm flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white\"\r\n                    @click=\"hide\"\r\n                >\r\n                    <k-icon icon=\"times\" />\r\n                    <span class=\"sr-only\">Close menu</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                <slot></slot>\r\n            </div>\r\n\r\n            <div\r\n                v-if=\"hasSlot('footer')\"\r\n                class=\"flex flex-row items-center border-t dark:border-gray-600 justify-between px-4 pt-4 -mx-4 mt-auto\"\r\n            >\r\n                <slot name=\"footer\"></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { uid } from '@/helpers/utils'\r\n    import { computed } from '@vue/reactivity'\r\n    import { Drawer, DrawerOptions } from 'flowbite'\r\n    import { defineComponent, onMounted, Ref, ref, watch } from 'vue'\r\n\r\n    export default defineComponent({\r\n        name: 'KDrawer',\r\n        props: {\r\n            modelValue: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: 'Drawer'\r\n            },\r\n            placement: {\r\n                type: String as () => DrawerOptions['placement'],\r\n                default: 'right',\r\n                options: ['right', 'left', 'top', 'bottom']\r\n            },\r\n            backdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        emits: ['update:modelValue'],\r\n        setup(props, ctx) {\r\n            const drawerId = uid()\r\n            const drawer: Ref<Drawer | null> = ref(null)\r\n            const hasSlot = (name: string) => !!ctx.slots[name]\r\n\r\n            // options with default values\r\n            const options: DrawerOptions = {\r\n                placement: props.placement,\r\n                backdrop: props.backdrop,\r\n                bodyScrolling: false,\r\n                edge: false,\r\n                edgeOffset: '',\r\n                backdropClasses:\r\n                    'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-30',\r\n                onShow: () => {\r\n                    ctx.emit('update:modelValue', true)\r\n                },\r\n                onHide: () => {\r\n                    ctx.emit('update:modelValue', false)\r\n                }\r\n            }\r\n\r\n            const classes = computed(() => {\r\n                if (props.placement === 'right') {\r\n                    return 'top-0 right-0 h-screen overflow-y-auto translate-x-full w-80'\r\n                } else if (props.placement === 'left') {\r\n                    return 'top-0 left-0 h-screen overflow-y-auto -translate-x-full w-80'\r\n                } else if (props.placement === 'top') {\r\n                    return 'top-0 left-0 right-0 w-full -translate-y-full '\r\n                } else if (props.placement === 'bottom') {\r\n                    return 'bottom-0 left-0 right-0 w-full overflow-y-auto transform-none'\r\n                }\r\n            })\r\n\r\n            const hide = () => {\r\n                ctx.emit('update:modelValue', false)\r\n            }\r\n\r\n            onMounted(() => {\r\n                const $targetEl = document.getElementById(drawerId)\r\n\r\n                drawer.value = new Drawer($targetEl, options)\r\n            })\r\n\r\n            watch(\r\n                () => props.modelValue,\r\n                (value) => {\r\n                    if (value) {\r\n                        drawer.value?.show()\r\n                    } else {\r\n                        drawer.value?.hide()\r\n                    }\r\n\r\n                    ctx.emit('update:modelValue', value)\r\n                }\r\n            )\r\n\r\n            return { drawerId, hide, hasSlot, classes }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped></style>\r\n","<template>\r\n    <div\r\n        :id=\"drawerId\"\r\n        class=\"fixed z-40 p-4 transition-transform bg-white dark:bg-gray-800\"\r\n        tabindex=\"-1\"\r\n        :class=\"classes\"\r\n    >\r\n        <div class=\"flex flex-col\">\r\n            <div\r\n                class=\"flex flex-row items-center border-b dark:border-gray-600 mb-4 pb-4 justify-between -mx-4 px-4\"\r\n            >\r\n                <div v-if=\"hasSlot('header')\">\r\n                    <slot name=\"header\"></slot>\r\n                </div>\r\n                <h5\r\n                    v-else\r\n                    class=\"text-base font-semibold text-gray-500 dark:text-gray-400\"\r\n                >\r\n                    {{ title }}\r\n                </h5>\r\n\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg w-8 h-8 text-sm flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white\"\r\n                    @click=\"hide\"\r\n                >\r\n                    <k-icon icon=\"times\" />\r\n                    <span class=\"sr-only\">Close menu</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                <slot></slot>\r\n            </div>\r\n\r\n            <div\r\n                v-if=\"hasSlot('footer')\"\r\n                class=\"flex flex-row items-center border-t dark:border-gray-600 justify-between px-4 pt-4 -mx-4 mt-auto\"\r\n            >\r\n                <slot name=\"footer\"></slot>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { uid } from '@/helpers/utils'\r\n    import { computed } from '@vue/reactivity'\r\n    import { Drawer, DrawerOptions } from 'flowbite'\r\n    import { defineComponent, onMounted, Ref, ref, watch } from 'vue'\r\n\r\n    export default defineComponent({\r\n        name: 'KDrawer',\r\n        props: {\r\n            modelValue: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: 'Drawer'\r\n            },\r\n            placement: {\r\n                type: String as () => DrawerOptions['placement'],\r\n                default: 'right',\r\n                options: ['right', 'left', 'top', 'bottom']\r\n            },\r\n            backdrop: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        emits: ['update:modelValue'],\r\n        setup(props, ctx) {\r\n            const drawerId = uid()\r\n            const drawer: Ref<Drawer | null> = ref(null)\r\n            const hasSlot = (name: string) => !!ctx.slots[name]\r\n\r\n            // options with default values\r\n            const options: DrawerOptions = {\r\n                placement: props.placement,\r\n                backdrop: props.backdrop,\r\n                bodyScrolling: false,\r\n                edge: false,\r\n                edgeOffset: '',\r\n                backdropClasses:\r\n                    'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-30',\r\n                onShow: () => {\r\n                    ctx.emit('update:modelValue', true)\r\n                },\r\n                onHide: () => {\r\n                    ctx.emit('update:modelValue', false)\r\n                }\r\n            }\r\n\r\n            const classes = computed(() => {\r\n                if (props.placement === 'right') {\r\n                    return 'top-0 right-0 h-screen overflow-y-auto translate-x-full w-80'\r\n                } else if (props.placement === 'left') {\r\n                    return 'top-0 left-0 h-screen overflow-y-auto -translate-x-full w-80'\r\n                } else if (props.placement === 'top') {\r\n                    return 'top-0 left-0 right-0 w-full -translate-y-full '\r\n                } else if (props.placement === 'bottom') {\r\n                    return 'bottom-0 left-0 right-0 w-full overflow-y-auto transform-none'\r\n                }\r\n            })\r\n\r\n            const hide = () => {\r\n                ctx.emit('update:modelValue', false)\r\n            }\r\n\r\n            onMounted(() => {\r\n                const $targetEl = document.getElementById(drawerId)\r\n\r\n                drawer.value = new Drawer($targetEl, options)\r\n            })\r\n\r\n            watch(\r\n                () => props.modelValue,\r\n                (value) => {\r\n                    if (value) {\r\n                        drawer.value?.show()\r\n                    } else {\r\n                        drawer.value?.hide()\r\n                    }\r\n\r\n                    ctx.emit('update:modelValue', value)\r\n                }\r\n            )\r\n\r\n            return { drawerId, hide, hasSlot, classes }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"names":["_sfc_main","defineComponent","props","ctx","drawerId","uid","drawer","ref","hasSlot","__name","name","options","classes","computed","hide","onMounted","$targetEl","Drawer","watch","value","_a","_b","_hoisted_1","_hoisted_5","_hoisted_7","_resolveComponent","_openBlock","_createElementBlock","_ctx","_normalizeClass","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_cache","args","_createVNode","_component_k_icon","_renderSlot"],"mappings":"yWAmDI,MAAAA,EAAeC,EAAgB,CAC3B,KAAM,UACN,MAAO,CACH,WAAY,CACR,KAAM,QACN,QAAS,EACb,EACA,MAAO,CACH,KAAM,OACN,QAAS,QACb,EACA,UAAW,CACP,KAAM,OACN,QAAS,QACT,QAAS,CAAC,QAAS,OAAQ,MAAO,QAAQ,CAC9C,EACA,SAAU,CACN,KAAM,QACN,QAAS,EACb,CACJ,EACA,MAAO,CAAC,mBAAmB,EAC3B,MAAMC,EAAOC,EAAK,CACd,MAAMC,EAAWC,IACXC,EAA6BC,EAAI,IAAI,EACrCC,EAAUC,EAACC,GAAiB,CAAC,CAACP,EAAI,MAAMO,GAA9B,WAGVC,EAAyB,CAC3B,UAAWT,EAAM,UACjB,SAAUA,EAAM,SAChB,cAAe,GACf,KAAM,GACN,WAAY,GACZ,gBACI,kEACJ,OAAQ,IAAM,CACNC,EAAA,KAAK,oBAAqB,EAAI,CACtC,EACA,OAAQ,IAAM,CACNA,EAAA,KAAK,oBAAqB,EAAK,CACvC,CAAA,EAGES,EAAUC,EAAS,IAAM,CACvB,GAAAX,EAAM,YAAc,QACb,MAAA,+DACX,GAAWA,EAAM,YAAc,OACpB,MAAA,+DACX,GAAWA,EAAM,YAAc,MACpB,MAAA,iDACX,GAAWA,EAAM,YAAc,SACpB,MAAA,+DACX,CACH,EAEKY,EAAOL,EAAA,IAAM,CACXN,EAAA,KAAK,oBAAqB,EAAK,CAAA,EAD1B,QAIb,OAAAY,EAAU,IAAM,CACN,MAAAC,EAAY,SAAS,eAAeZ,CAAQ,EAElDE,EAAO,MAAQ,IAAIW,EAAOD,EAAWL,CAAO,CAAA,CAC/C,EAEDO,EACI,IAAMhB,EAAM,WACXiB,GAAU,SACHA,GACAC,EAAAd,EAAO,QAAP,MAAAc,EAAc,QAEdC,EAAAf,EAAO,QAAP,MAAAe,EAAc,OAGdlB,EAAA,KAAK,oBAAqBgB,CAAK,CACvC,CAAA,EAGG,CAAE,SAAAf,EAAU,KAAAU,EAAM,QAAAN,EAAS,QAAAI,CAAQ,CAC9C,CACJ,CAAC,EC3HWU,EAAA,CAAA,IAAA,gJAOIC,EAAM,CAAA,IAAA,kHAqBVC,EAAM,CAAA,IAAA,4IApClBC,EAyCM,QAAA,SAvCGC,EAAC,EAAAC,EAAA,MAAA,CACN,GAAQC,EAAA,SAAA,MAAAC,EAAA,CAAA,gEAAAD,EAAA,OAAA,CAAA,EAGR,SAAA,IAAA,EAAA,CAI0BE,EAAA,MAAAC,EAAA,CAAlBD,EAAA,MAAAE,EAAA,CAAAJ,EACI,QAA2B,QAAA,GAAAF,EAAA,EAAAC,EAAA,MAAAM,EAAA,KAE/B,OAKK,QAAA,MAGDP,EAAa,EAAAC,EAAA,KAAAJ,EAAAW,EAAAN,EAAA,KAAA,EAAA,CAAA,GACPE,EAAA,SAAA,CACL,KAAA,SAAA,MAAA,8KAED,QAAuBK,EAAA,KAAAA,EAAA,GAAf,IAAIC,IAAQR,EAAA,MAAAA,EAAA,KAAA,GAAAQ,CAAA,EAAA,EACpB,CAAAC,EAAAC,EAAA,CAAA,KAAA,OAAA,CAAA,GAIR,CAAA,CAAA,CAAA,gBAKUC,EAAOX,EAAA,OAAA,SAAA,CAAA,CAAA,IAGb,QAA2B,QAAA,GAAAF,EAAA,EAAAC,EAAA,MAAAH,EAAA"}