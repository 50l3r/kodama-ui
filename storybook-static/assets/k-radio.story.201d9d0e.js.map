{"version":3,"file":"k-radio.story.201d9d0e.js","sources":["../../src/components/data-entry/k-radio/k-radio.vue","../../src/components/data-entry/k-radio/k-radio.vue","../../src/components/data-entry/k-radio/k-radio.story.mdx"],"sourcesContent":["<template>\r\n    <div class=\"flex items-center\">\r\n        <input\r\n            :id=\"inputId\"\r\n            type=\"radio\"\r\n            :value=\"value\"\r\n            :name=\"name\"\r\n            class=\"w-4 h-4 bg-gray-100 border-gray-300 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n            :class=\"classes\"\r\n            :checked=\"model === value\"\r\n            @change=\"change\"\r\n        />\r\n        <label\r\n            v-if=\"label || hasSlot('default')\"\r\n            :for=\"inputId\"\r\n            class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300 select-none\"\r\n        >\r\n            <template v-if=\"hasSlot('default')\">\r\n                <slot></slot>\r\n            </template>\r\n            <template v-else>\r\n                {{ label }}\r\n            </template>\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, defineComponent } from 'vue'\r\n    import { uid, colors } from '@/helpers/utils'\r\n\r\n    export default defineComponent({\r\n        name: 'KRadio',\r\n        props: {\r\n            modelValue: {\r\n                type: [String, Number, Boolean, Object, Array, Symbol],\r\n                default: false\r\n            },\r\n            name: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            value: {\r\n                type: [String, Number, Boolean, Object, Array, Symbol],\r\n                default: ''\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            color: {\r\n                type: String,\r\n                control: 'inline-radio',\r\n                options: colors,\r\n                validator: (val: string) => colors.includes(val),\r\n                default: 'primary',\r\n                description: 'Color del botón'\r\n            }\r\n        },\r\n        emits: ['update:modelValue'],\r\n        setup(props, ctx) {\r\n            const inputId = uid()\r\n            const hasSlot = (name: string) => !!ctx.slots[name]\r\n\r\n            const classes = computed(() => {\r\n                let classes = []\r\n\r\n                if (props.color === 'white' || props.color === 'black') {\r\n                    classes.push(\r\n                        'text-black focus:ring-black dark:focus:ring-white dark:text-black k-checkbox-inverse'\r\n                    )\r\n                } else if (props.color === 'gray') {\r\n                    classes.push(\r\n                        'text-gray-300 focus:ring-gray-300 dark:focus:ring-gray-300'\r\n                    )\r\n                } else if (props.color === 'primary') {\r\n                    classes.push(\r\n                        'text-primary focus:ring-primary dark:focus:ring-primary'\r\n                    )\r\n                } else if (props.color === 'secondary') {\r\n                    classes.push(\r\n                        'text-secondary focus:ring-secondary dark:focus:ring-secondary'\r\n                    )\r\n                } else if (props.color === 'success') {\r\n                    classes.push(\r\n                        'text-success focus:ring-success dark:focus:ring-success'\r\n                    )\r\n                } else if (props.color === 'warning') {\r\n                    classes.push(\r\n                        'text-warning focus:ring-warning dark:focus:ring-warning'\r\n                    )\r\n                } else if (props.color === 'danger') {\r\n                    classes.push(\r\n                        'text-danger focus:ring-danger dark:focus:ring-danger'\r\n                    )\r\n                } else if (props.color === 'info') {\r\n                    classes.push(\r\n                        'text-info focus:ring-info dark:focus:ring-info'\r\n                    )\r\n                }\r\n\r\n                return classes\r\n            })\r\n\r\n            const change = (e: any) => {\r\n                model.value = e.target.value\r\n            }\r\n\r\n            const model = computed({\r\n                get() {\r\n                    return props.modelValue\r\n                },\r\n                set(value) {\r\n                    ctx.emit('update:modelValue', value)\r\n                }\r\n            })\r\n\r\n            return { model, hasSlot, inputId, classes, change }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .dark .k-checkbox.k-checkbox-inverse:checked {\r\n        filter: invert(1);\r\n    }\r\n</style>\r\n","<template>\r\n    <div class=\"flex items-center\">\r\n        <input\r\n            :id=\"inputId\"\r\n            type=\"radio\"\r\n            :value=\"value\"\r\n            :name=\"name\"\r\n            class=\"w-4 h-4 bg-gray-100 border-gray-300 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n            :class=\"classes\"\r\n            :checked=\"model === value\"\r\n            @change=\"change\"\r\n        />\r\n        <label\r\n            v-if=\"label || hasSlot('default')\"\r\n            :for=\"inputId\"\r\n            class=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300 select-none\"\r\n        >\r\n            <template v-if=\"hasSlot('default')\">\r\n                <slot></slot>\r\n            </template>\r\n            <template v-else>\r\n                {{ label }}\r\n            </template>\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, defineComponent } from 'vue'\r\n    import { uid, colors } from '@/helpers/utils'\r\n\r\n    export default defineComponent({\r\n        name: 'KRadio',\r\n        props: {\r\n            modelValue: {\r\n                type: [String, Number, Boolean, Object, Array, Symbol],\r\n                default: false\r\n            },\r\n            name: {\r\n                type: String,\r\n                required: true\r\n            },\r\n            value: {\r\n                type: [String, Number, Boolean, Object, Array, Symbol],\r\n                default: ''\r\n            },\r\n            label: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            color: {\r\n                type: String,\r\n                control: 'inline-radio',\r\n                options: colors,\r\n                validator: (val: string) => colors.includes(val),\r\n                default: 'primary',\r\n                description: 'Color del botón'\r\n            }\r\n        },\r\n        emits: ['update:modelValue'],\r\n        setup(props, ctx) {\r\n            const inputId = uid()\r\n            const hasSlot = (name: string) => !!ctx.slots[name]\r\n\r\n            const classes = computed(() => {\r\n                let classes = []\r\n\r\n                if (props.color === 'white' || props.color === 'black') {\r\n                    classes.push(\r\n                        'text-black focus:ring-black dark:focus:ring-white dark:text-black k-checkbox-inverse'\r\n                    )\r\n                } else if (props.color === 'gray') {\r\n                    classes.push(\r\n                        'text-gray-300 focus:ring-gray-300 dark:focus:ring-gray-300'\r\n                    )\r\n                } else if (props.color === 'primary') {\r\n                    classes.push(\r\n                        'text-primary focus:ring-primary dark:focus:ring-primary'\r\n                    )\r\n                } else if (props.color === 'secondary') {\r\n                    classes.push(\r\n                        'text-secondary focus:ring-secondary dark:focus:ring-secondary'\r\n                    )\r\n                } else if (props.color === 'success') {\r\n                    classes.push(\r\n                        'text-success focus:ring-success dark:focus:ring-success'\r\n                    )\r\n                } else if (props.color === 'warning') {\r\n                    classes.push(\r\n                        'text-warning focus:ring-warning dark:focus:ring-warning'\r\n                    )\r\n                } else if (props.color === 'danger') {\r\n                    classes.push(\r\n                        'text-danger focus:ring-danger dark:focus:ring-danger'\r\n                    )\r\n                } else if (props.color === 'info') {\r\n                    classes.push(\r\n                        'text-info focus:ring-info dark:focus:ring-info'\r\n                    )\r\n                }\r\n\r\n                return classes\r\n            })\r\n\r\n            const change = (e: any) => {\r\n                model.value = e.target.value\r\n            }\r\n\r\n            const model = computed({\r\n                get() {\r\n                    return props.modelValue\r\n                },\r\n                set(value) {\r\n                    ctx.emit('update:modelValue', value)\r\n                }\r\n            })\r\n\r\n            return { model, hasSlot, inputId, classes, change }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    .dark .k-checkbox.k-checkbox-inverse:checked {\r\n        filter: invert(1);\r\n    }\r\n</style>\r\n","import { Meta, Story, Canvas, Stories, ArgsTable } from '@storybook/addon-docs';\r\nimport { ref } from 'vue';\r\nimport KRadio from './k-radio.vue';\r\nimport { renderArgs, renderParameters } from '../../../helpers/storybook'\r\nimport SHead from '../../../../.storybook/app/components/s-head.tsx'\r\n\r\nexport const Template = (args) => ({\r\n    components: { KRadio },\r\n    setup() {\r\n      return { args };\r\n    },\r\n    template: '<k-card><k-radio v-bind=\"args\">Checkbox Label</k-radio></k-card>'\r\n});\r\n\r\n<Meta title=\"Data Entry/Radio\" component={KRadio} argTypes={renderArgs(KRadio)} decorators={[() => ({ template: '<div class=\"flex items-center justify-center p-10\"><story /></div>' })]} />\r\n\r\n<SHead image=\"https://media0.giphy.com/media/hDSy8w6rGHeTe/giphy.gif?cid=ecf05e47d1yojdu59ttft3ykom3decoar5aubq8zin0w9sov&rid=giphy.gif&ct=g\">🛎 KRadio</SHead>\r\n\r\n# KRadio\r\nCon el componente `k-radio` puedes marcar o desmarcar una opción. Util para booleanos.\r\n\r\n<Story name=\"Default\" parameters={renderParameters({showPanel: true})}  args={{name:'radio-name'}}>\r\n  {Template.bind({})}\r\n</Story>\r\n\r\n<ArgsTable story=\"Default\" />\r\n\r\n## **Color**\r\nExisten diferentes estilos de colores para los botones. Muchos de ellos se usan para definir una accion en el sistema.\r\n\r\n<Canvas>\r\n  <Story name=\"Color\" argTypes={renderArgs(KRadio, {}, true)} parameters={renderParameters({showPanel: false})}>\r\n    {() => {\r\n      return {\r\n        components: { KRadio },\r\n        setup() {\r\n          const value = ref('White/Black');\r\n          return { value };\r\n        },\r\n        template: `\r\n          <k-card class=\"grid grid-cols-2 gap-4\">\r\n            <k-radio v-model=\"value\" value=\"White/Black\" color=\"white\" name=\"radio-name\">White / Black</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Gray\" color=\"gray\" name=\"radio-name\">Gray</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Primary\" color=\"primary\" name=\"radio-name\">Primary</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Secondary\" color=\"secondary\" name=\"radio-name\">Secondary</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Success\" color=\"success\" name=\"radio-name\">Success</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Warning\" color=\"warning\" name=\"radio-name\">Warning</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Danger\" color=\"danger\" name=\"radio-name\">Danger</k-radio>\r\n            <k-radio v-model=\"value\" value=\"Info\" color=\"info\" name=\"radio-name\">Info</k-radio>\r\n          </k-card>\r\n          <k-card>\r\n            <b>Value:</b> {{ value }}\r\n          </k-card>\r\n        `,\r\n      };\r\n    }}\r\n  </Story>\r\n</Canvas>\r\n"],"names":["_sfc_main","defineComponent","colors","val","props","ctx","inputId","uid","hasSlot","__name","name","classes","computed","change","e","model","value","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","args","_hoisted_2","_renderSlot","_Fragment","Template","components","KRadio","setup","template","layoutProps","MDXLayout","MDXContent","mdx","Meta","renderArgs","SHead","Story","renderParameters","showPanel","bind","ArgsTable","Canvas","ref","isMDXComponent","defaultStory","storyName","parameters","storySource","source","color","argTypes","componentMeta","title","decorators","component","includeStories","mdxStoryNameToKey","docs","page","AddContext","__namedExportsOrder"],"mappings":"+mBA+BI,MAAAA,EAAeC,EAAgB,CAC3B,KAAM,SACN,MAAO,CACH,WAAY,CACR,KAAM,CAAC,OAAQ,OAAQ,QAAS,OAAQ,MAAO,MAAM,EACrD,QAAS,EACb,EACA,KAAM,CACF,KAAM,OACN,SAAU,EACd,EACA,MAAO,CACH,KAAM,CAAC,OAAQ,OAAQ,QAAS,OAAQ,MAAO,MAAM,EACrD,QAAS,EACb,EACA,MAAO,CACH,KAAM,OACN,QAAS,EACb,EACA,MAAO,CACH,KAAM,OACN,QAAS,eACT,QAASC,EACT,UAAYC,GAAgBD,EAAO,SAASC,CAAG,EAC/C,QAAS,UACT,YAAa,oBACjB,CACJ,EACA,MAAO,CAAC,mBAAmB,EAC3B,MAAMC,EAAOC,EAAK,CACd,MAAMC,EAAUC,IACVC,EAAUC,EAACC,GAAiB,CAAC,CAACL,EAAI,MAAMK,GAA9B,WAEVC,EAAUC,EAAS,IAAM,CAC3B,IAAID,EAAU,CAAA,EAEd,OAAIP,EAAM,QAAU,SAAWA,EAAM,QAAU,QAC3CO,EAAQ,KACJ,sFAAA,EAEGP,EAAM,QAAU,OACvBO,EAAQ,KACJ,4DAAA,EAEGP,EAAM,QAAU,UACvBO,EAAQ,KACJ,yDAAA,EAEGP,EAAM,QAAU,YACvBO,EAAQ,KACJ,+DAAA,EAEGP,EAAM,QAAU,UACvBO,EAAQ,KACJ,yDAAA,EAEGP,EAAM,QAAU,UACvBO,EAAQ,KACJ,yDAAA,EAEGP,EAAM,QAAU,SACvBO,EAAQ,KACJ,sDAAA,EAEGP,EAAM,QAAU,QACvBO,EAAQ,KACJ,gDAAA,EAIDA,CAAA,CACV,EAEKE,EAASJ,EAACK,GAAW,CACjBC,EAAA,MAAQD,EAAE,OAAO,KAAA,EADZ,UAITC,EAAQH,EAAS,CACnB,KAAM,CACF,OAAOR,EAAM,UACjB,EACA,IAAIY,EAAO,CACHX,EAAA,KAAK,oBAAqBW,CAAK,CACvC,CAAA,CACH,EAED,MAAO,CAAE,MAAAD,EAAO,QAAAP,EAAS,QAAAF,EAAS,QAAAK,EAAS,OAAAE,CAAO,CACtD,CACJ,CAAC,2FCrHGI,EASEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,QAROC,EAAO,EAAAC,EAAA,MAAAC,EAAA,CACAC,EAAA,QAAA,CACX,GAAOT,EAAA,QACP,KAAM,QACP,MAAKA,EAAA,MAEJ,KAASA,EAAA,KACT,QAAM,CAAQ,mHAAAA,EAAA,OAAA,CAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,MAGT,SAAKC,EAAI,KAAOA,EAAA,GAAA,IAAAS,IAAAV,EAAA,QAAAA,EAAA,OAAA,GAAAU,CAAA,EAAA,EAD1B,KAAA,GAAAC,CAAA,EAAAX,EAAA,OAAAA,EAAA,QAAA,SAAA,GAAAM,EAAA,EAEiBC,EAAA,QAAA,CACb,IAAK,EAAA,IAAAP,EAAA,QAEW,MAAA,uEAAA,EAAA,CAGhBA,EAAA,QAAA,SAAA,EAAAY,EAAAZ,EAAA,OAAA,UACO,CAAK,IAAA,CAAA,EAAA,OAAA,EAAA,GAAAM,EAAA,EAAAC,EAAAM,EAAA,CAAA,IAAA,GAAA,yCAnBhBtB,EAAAQ,EAAA,k3BCWKe,MAAAA,EAAWJ,EAAAA,IAAS,CAC/BK,WAAY,CACVC,OAAAA,CACD,EACDC,OAAQ,CACN,MAAO,CACLP,KAAAA,EAEH,EACDQ,SAAU,kEACZ,GAVwBR,YAYlBS,EAAc,CAClBL,SAAAA,CACF,EACMM,EAAY,UAClB,SAASC,EAAW,CAClBN,WAAAA,KACG7B,CACL,EAAG,CACD,OAAOoC,EAACF,EAAcD,EAAAA,CAAAA,EAAAA,EAAiBjC,EAAK,CAAE,WAAY6B,EAAY,QAAQ,WAAW,CAAA,EAGvFO,EAACC,EAAI,CAAC,MAAM,mBAAmB,UAAWP,EAAQ,SAAUQ,EAAWR,CAAM,EAAG,WAAY,CAAC,KAAO,CAClGE,SAAU,oEACZ,EAAE,EAAG,QAAQ,OAAS,EACtBI,EAACG,EAAK,CAAC,MAAM,iIAAiI,QAAQ,OAAO,EAAA,kBAAA,EAC7JH,EAAM,KAAA,KAAA,QAAO,EACbA,EAAA,IAAA,KAAK,qBAAoBA,EAAA,aAAA,CAAY,WAAW,GAAG,EAAG,SAAQ,EAAgB,gEAA4D,EAC1IA,EAACI,EAAK,CAAC,KAAK,UAAU,WAAYC,EAAiB,CACjDC,UAAW,EACb,CAAC,EAAG,KAAM,CACRpC,KAAM,YACN,EAAC,QAAQ,SACZsB,EAASe,KAAK,CAAA,CAAE,CAAC,EAEhBP,EAACQ,EAAS,CAAC,MAAM,UAAU,QAAQ,WAAW,CAAA,EAC9CR,EAAI,KAAA,KAAAA,EAAA,SAAA,CAAQ,WAAW,IAAO,EAAA,OAAM,CAAU,EAC9CA,WAAK,wHAAuH,EAC5HA,EAACS,EAAM,CAAC,QAAQ,QAAQ,EAC1BT,EAACI,EAAK,CAAC,KAAK,QAAQ,SAAUF,EAAWR,EAAQ,CAAA,EAAI,EAAI,EAAG,WAAYW,EAAiB,CACnFC,UAAW,EACb,CAAC,EAAG,QAAQ,OAAO,EACpB,KACY,CACLb,WAAY,CACVC,OAAAA,CACD,EACDC,OAAQ,CAEN,MAAO,CACLnB,MAFYkC,EAAI,aAAa,EAIhC,EACDd,SAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAgBd,CACC,CACG,CAEb,CA1DSG,EAAAA,EAAAA,cA4DTA,EAAWY,eAAiB,GAErB,MAAMC,EAAepB,EAASe,KAAK,EAAE,EAC5CK,EAAaC,UAAY,UACzBD,EAAaxB,KAAO,CAClBlB,KAAM,YACR,EACA0C,EAAaE,WAAa,CAAEC,YAAa,CAAEC,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA8L,EAAE,GAAGX,EAAiB,CACrQC,UAAW,GACZ,CAAE,EAEI,MAAMW,EAAShD,EAAA,KACb,CACLwB,WAAY,CACVC,OAAAA,CACD,EACDC,OAAQ,CAEN,MAAO,CACLnB,MAFYkC,EAAI,aAAa,EAIhC,EACDd,SAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXO,SA4BtBqB,EAAMJ,UAAY,QAClBI,EAAMC,SAAWhB,EAAWR,EAAQ,CAAE,EAAE,EAAI,EAC5CuB,EAAMH,WAAa,CAAEC,YAAa,CAAEC,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAmvC,EAAE,GAAGX,EAAiB,CACnzCC,UAAW,GACZ,CAAE,EAEH,MAAMa,EAAgB,CAAEC,MAAO,mBAAoBC,WAAY,CAAC,KAAO,CACrEzB,SAAU,oEACZ,EAAE,EAAG0B,UAAW5B,EAAQwB,SAAUhB,EAAWR,CAAM,EAAG6B,eAAgB,CAAC,eAAe,OAAO,CAAI,EAE3FC,EAAoB,CAAC,QAAU,eAAe,MAAQ,OAAO,EAEnEL,EAAcL,WAAaK,EAAcL,YAAc,GACvDK,EAAcL,WAAWW,KAAO,CAC9B,GAAIN,EAAcL,WAAWW,MAAQ,GACrCC,KAAM,IAAM1B,EAAC2B,EAAU,CAAC,kBAAmBH,EAAmB,wBAAyBL,GAAenB,EAACD,EAAa,IAAA,CAAA,CACtH,EAE4B,MAAA6B,GAAA,CAAA,WAAA,eAAA,OAAA"}