{"version":3,"file":"k-modal.72407fb9.js","sources":["../../src/components/feedback/k-modal/k-modal.vue","../../src/components/feedback/k-modal/k-modal.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :id=\"modalId\"\r\n        tabindex=\"-1\"\r\n        aria-hidden=\"true\"\r\n        :class=\"defaultModalClasses\"\r\n    >\r\n        <div class=\"relative w-full h-full md:h-auto\" :class=\"contentClasses\">\r\n            <div class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n                <div\r\n                    v-if=\"header && (title || hasSlot('header'))\"\r\n                    class=\"flex items-center px-6 py-5 border-b rounded-t dark:border-gray-600\"\r\n                >\r\n                    <template v-if=\"hasSlot('header')\">\r\n                        <slot name=\"header\"></slot>\r\n                    </template>\r\n                    <template v-else>\r\n                        <k-title :size=\"5\" class=\"font-semibold\">\r\n                            {{ title }}\r\n                        </k-title>\r\n                    </template>\r\n\r\n                    <button\r\n                        v-if=\"closable\"\r\n                        type=\"button\"\r\n                        class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg w-8 h-8 text-sm flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white ml-auto\"\r\n                        @click=\"hide\"\r\n                    >\r\n                        <k-icon icon=\"times\" />\r\n                        <span class=\"sr-only\">Close menu</span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"p-6\">\r\n                    <slot></slot>\r\n                </div>\r\n\r\n                <div\r\n                    v-if=\"hasSlot('footer')\"\r\n                    class=\"flex items-center px-6 py-5 border-t border-gray-200 rounded-b dark:border-gray-600\"\r\n                >\r\n                    <slot name=\"footer\"></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, defineComponent, onMounted, ref, Ref, watch } from 'vue'\r\n    import { Modal, ModalOptions } from 'flowbite'\r\n    import { uid } from '../../../helpers/utils'\r\n\r\n    export default defineComponent({\r\n        name: 'KModal',\r\n        props: {\r\n            modelValue: {\r\n                type: Boolean,\r\n                default: false,\r\n                description: 'Controla la apertura del modal'\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: '',\r\n                description: 'Título del modal'\r\n            },\r\n            placement: {\r\n                type: String as () => ModalOptions['placement'],\r\n                default: 'top',\r\n                options: [\r\n                    'top-left',\r\n                    'top-center',\r\n                    'top-right',\r\n                    'center-left',\r\n                    'center-center',\r\n                    'center-right',\r\n                    'bottom-left',\r\n                    'bottom-center',\r\n                    'bottom-right'\r\n                ],\r\n                description: 'Posición del modal'\r\n            },\r\n            header: {\r\n                type: Boolean,\r\n                default: true,\r\n                description: 'Permite mostrar u ocultar el header del modal'\r\n            },\r\n            closable: {\r\n                type: Boolean,\r\n                default: true,\r\n                description:\r\n                    'Permite cerrar el modal desde el backdrop o clicando en el botón de cerrar'\r\n            },\r\n            backdropClose: {\r\n                type: Boolean,\r\n                default: true,\r\n                description: 'Permite cerrar el modal desde el backdrop'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'lg',\r\n                options: ['sm', 'md', 'lg', 'xl'],\r\n                description: 'Tamaño del modal'\r\n            }\r\n        },\r\n        emits: ['update:modelValue', 'show', 'hide', 'toggle'],\r\n        setup(props, ctx) {\r\n            const modalId = uid()\r\n\r\n            const modal: Ref<Modal | null> = ref(null)\r\n            const hasSlot = (name: string) => !!ctx.slots[name]\r\n\r\n            const renderOptions = () => {\r\n                const options: ModalOptions = {\r\n                    placement: props.placement,\r\n                    backdrop: props.backdropClose ? 'dynamic' : 'static',\r\n                    backdropClasses:\r\n                        'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-40',\r\n                    closable: props.closable,\r\n                    onHide: () => {\r\n                        ctx.emit('update:modelValue', false)\r\n                        ctx.emit('hide')\r\n                    },\r\n                    onShow: () => {\r\n                        ctx.emit('update:modelValue', true)\r\n                        ctx.emit('show')\r\n                    },\r\n                    onToggle: () => {\r\n                        ctx.emit('toggle')\r\n                    }\r\n                }\r\n\r\n                return options\r\n            }\r\n\r\n            const init = () => {\r\n                const $targetEl = document.getElementById(modalId)\r\n                const options = renderOptions()\r\n\r\n                modal.value = new Modal($targetEl, options)\r\n\r\n                if (props.modelValue) {\r\n                    modal.value.show()\r\n                } else {\r\n                    modal.value.hide()\r\n                }\r\n            }\r\n\r\n            const hide = () => {\r\n                ctx.emit('update:modelValue', false)\r\n            }\r\n\r\n            watch(\r\n                () => props.modelValue,\r\n                (value) => {\r\n                    if (value) {\r\n                        modal.value?.show()\r\n                    } else {\r\n                        modal.value?.hide()\r\n                    }\r\n                    ctx.emit('update:modelValue', value)\r\n                }\r\n            )\r\n\r\n            watch(\r\n                () => props.placement,\r\n                (value) => {\r\n                    const $targetEl = document.getElementById(modalId)\r\n                    if ($targetEl) {\r\n                        $targetEl.className = defaultModalClasses\r\n                    }\r\n\r\n                    init()\r\n                }\r\n            )\r\n\r\n            const defaultModalClasses =\r\n                'fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] md:h-full'\r\n\r\n            const contentClasses = computed(() => {\r\n                const classes = []\r\n\r\n                if (props.size === 'xs') {\r\n                    classes.push('max-w-md')\r\n                } else if (props.size === 'sm') {\r\n                    classes.push('max-w-xl')\r\n                } else if (props.size === 'md') {\r\n                    classes.push('max-w-2xl')\r\n                } else if (props.size === 'lg') {\r\n                    classes.push('max-w-4xl')\r\n                } else if (props.size === 'xl') {\r\n                    classes.push('max-w-5xl')\r\n                }\r\n\r\n                return classes\r\n            })\r\n\r\n            onMounted(() => {\r\n                init()\r\n            })\r\n\r\n            return {\r\n                modalId,\r\n                hasSlot,\r\n                hide,\r\n                defaultModalClasses,\r\n                contentClasses\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped></style>\r\n","<template>\r\n    <div\r\n        :id=\"modalId\"\r\n        tabindex=\"-1\"\r\n        aria-hidden=\"true\"\r\n        :class=\"defaultModalClasses\"\r\n    >\r\n        <div class=\"relative w-full h-full md:h-auto\" :class=\"contentClasses\">\r\n            <div class=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\r\n                <div\r\n                    v-if=\"header && (title || hasSlot('header'))\"\r\n                    class=\"flex items-center px-6 py-5 border-b rounded-t dark:border-gray-600\"\r\n                >\r\n                    <template v-if=\"hasSlot('header')\">\r\n                        <slot name=\"header\"></slot>\r\n                    </template>\r\n                    <template v-else>\r\n                        <k-title :size=\"5\" class=\"font-semibold\">\r\n                            {{ title }}\r\n                        </k-title>\r\n                    </template>\r\n\r\n                    <button\r\n                        v-if=\"closable\"\r\n                        type=\"button\"\r\n                        class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg w-8 h-8 text-sm flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white ml-auto\"\r\n                        @click=\"hide\"\r\n                    >\r\n                        <k-icon icon=\"times\" />\r\n                        <span class=\"sr-only\">Close menu</span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"p-6\">\r\n                    <slot></slot>\r\n                </div>\r\n\r\n                <div\r\n                    v-if=\"hasSlot('footer')\"\r\n                    class=\"flex items-center px-6 py-5 border-t border-gray-200 rounded-b dark:border-gray-600\"\r\n                >\r\n                    <slot name=\"footer\"></slot>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, defineComponent, onMounted, ref, Ref, watch } from 'vue'\r\n    import { Modal, ModalOptions } from 'flowbite'\r\n    import { uid } from '../../../helpers/utils'\r\n\r\n    export default defineComponent({\r\n        name: 'KModal',\r\n        props: {\r\n            modelValue: {\r\n                type: Boolean,\r\n                default: false,\r\n                description: 'Controla la apertura del modal'\r\n            },\r\n            title: {\r\n                type: String,\r\n                default: '',\r\n                description: 'Título del modal'\r\n            },\r\n            placement: {\r\n                type: String as () => ModalOptions['placement'],\r\n                default: 'top',\r\n                options: [\r\n                    'top-left',\r\n                    'top-center',\r\n                    'top-right',\r\n                    'center-left',\r\n                    'center-center',\r\n                    'center-right',\r\n                    'bottom-left',\r\n                    'bottom-center',\r\n                    'bottom-right'\r\n                ],\r\n                description: 'Posición del modal'\r\n            },\r\n            header: {\r\n                type: Boolean,\r\n                default: true,\r\n                description: 'Permite mostrar u ocultar el header del modal'\r\n            },\r\n            closable: {\r\n                type: Boolean,\r\n                default: true,\r\n                description:\r\n                    'Permite cerrar el modal desde el backdrop o clicando en el botón de cerrar'\r\n            },\r\n            backdropClose: {\r\n                type: Boolean,\r\n                default: true,\r\n                description: 'Permite cerrar el modal desde el backdrop'\r\n            },\r\n            size: {\r\n                type: String,\r\n                default: 'lg',\r\n                options: ['sm', 'md', 'lg', 'xl'],\r\n                description: 'Tamaño del modal'\r\n            }\r\n        },\r\n        emits: ['update:modelValue', 'show', 'hide', 'toggle'],\r\n        setup(props, ctx) {\r\n            const modalId = uid()\r\n\r\n            const modal: Ref<Modal | null> = ref(null)\r\n            const hasSlot = (name: string) => !!ctx.slots[name]\r\n\r\n            const renderOptions = () => {\r\n                const options: ModalOptions = {\r\n                    placement: props.placement,\r\n                    backdrop: props.backdropClose ? 'dynamic' : 'static',\r\n                    backdropClasses:\r\n                        'bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-40',\r\n                    closable: props.closable,\r\n                    onHide: () => {\r\n                        ctx.emit('update:modelValue', false)\r\n                        ctx.emit('hide')\r\n                    },\r\n                    onShow: () => {\r\n                        ctx.emit('update:modelValue', true)\r\n                        ctx.emit('show')\r\n                    },\r\n                    onToggle: () => {\r\n                        ctx.emit('toggle')\r\n                    }\r\n                }\r\n\r\n                return options\r\n            }\r\n\r\n            const init = () => {\r\n                const $targetEl = document.getElementById(modalId)\r\n                const options = renderOptions()\r\n\r\n                modal.value = new Modal($targetEl, options)\r\n\r\n                if (props.modelValue) {\r\n                    modal.value.show()\r\n                } else {\r\n                    modal.value.hide()\r\n                }\r\n            }\r\n\r\n            const hide = () => {\r\n                ctx.emit('update:modelValue', false)\r\n            }\r\n\r\n            watch(\r\n                () => props.modelValue,\r\n                (value) => {\r\n                    if (value) {\r\n                        modal.value?.show()\r\n                    } else {\r\n                        modal.value?.hide()\r\n                    }\r\n                    ctx.emit('update:modelValue', value)\r\n                }\r\n            )\r\n\r\n            watch(\r\n                () => props.placement,\r\n                (value) => {\r\n                    const $targetEl = document.getElementById(modalId)\r\n                    if ($targetEl) {\r\n                        $targetEl.className = defaultModalClasses\r\n                    }\r\n\r\n                    init()\r\n                }\r\n            )\r\n\r\n            const defaultModalClasses =\r\n                'fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] md:h-full'\r\n\r\n            const contentClasses = computed(() => {\r\n                const classes = []\r\n\r\n                if (props.size === 'xs') {\r\n                    classes.push('max-w-md')\r\n                } else if (props.size === 'sm') {\r\n                    classes.push('max-w-xl')\r\n                } else if (props.size === 'md') {\r\n                    classes.push('max-w-2xl')\r\n                } else if (props.size === 'lg') {\r\n                    classes.push('max-w-4xl')\r\n                } else if (props.size === 'xl') {\r\n                    classes.push('max-w-5xl')\r\n                }\r\n\r\n                return classes\r\n            })\r\n\r\n            onMounted(() => {\r\n                init()\r\n            })\r\n\r\n            return {\r\n                modalId,\r\n                hasSlot,\r\n                hide,\r\n                defaultModalClasses,\r\n                contentClasses\r\n            }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"names":["_sfc_main","defineComponent","props","ctx","modalId","uid","modal","ref","hasSlot","__name","name","renderOptions","init","$targetEl","options","Modal","hide","watch","value","_a","_b","defaultModalClasses","contentClasses","computed","classes","onMounted","_hoisted_3","_hoisted_6","_resolveComponent","_openBlock","_createElementBlock","_ctx","_normalizeClass","_createElementVNode","_hoisted_2","_renderSlot","_createBlock","_component_k_title","_cache","args","_createVNode","_component_k_icon","_createCommentVNode","_hoisted_5"],"mappings":"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"}