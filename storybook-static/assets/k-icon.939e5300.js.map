{"version":3,"file":"k-icon.939e5300.js","sources":["../../src/components/general/k-icon/k-icon.vue","../../src/components/general/k-icon/k-icon.vue"],"sourcesContent":["<template>\r\n    <span\r\n        :style=\"{\r\n            'display': 'inline-flex',\r\n            'align-items': 'center',\r\n            'justify-content': 'center'\r\n        }\"\r\n    >\r\n        <i :class=\"classes\" :style=\"style\"></i>\r\n    </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, computed, PropType, StyleValue } from 'vue'\r\n\r\n    export default defineComponent({\r\n        name: 'KIcon',\r\n        autoload: true,\r\n        props: {\r\n            icon: {\r\n                type: String as PropType<string>,\r\n                required: true,\r\n                description: 'Icono'\r\n            },\r\n            type: {\r\n                type: String as PropType<'fas' | 'fal' | 'fad' | 'far'>,\r\n                default: 'fad',\r\n                options: ['fas', 'fal', 'fad', 'far'],\r\n                control: 'inline-radio',\r\n                description: 'Tipo de icono'\r\n            },\r\n            size: {\r\n                type: Number,\r\n                default: 0,\r\n                description: 'Tamaño del icono'\r\n            },\r\n            spin: {\r\n                type: Boolean,\r\n                default: false,\r\n                description: 'Animación de rotación'\r\n            }\r\n        },\r\n        setup(props) {\r\n            const classes = computed(() => {\r\n                const aclass: any[] = ['k-icon']\r\n\r\n                aclass.push(props.type)\r\n                aclass.push(`fa-${props.icon}`)\r\n\r\n                if (props.spin) {\r\n                    aclass.push('fa-spin')\r\n                }\r\n\r\n                return aclass\r\n            })\r\n\r\n            const style = computed((): StyleValue => {\r\n                const style: StyleValue = {}\r\n\r\n                if (props.size > 0) {\r\n                    style['font-size'] = props.size + 'px'\r\n                }\r\n\r\n                return style\r\n            })\r\n\r\n            return { classes, style }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped>\r\n    .k-icon {\r\n        color: inherit;\r\n    }\r\n</style>\r\n","<template>\r\n    <span\r\n        :style=\"{\r\n            'display': 'inline-flex',\r\n            'align-items': 'center',\r\n            'justify-content': 'center'\r\n        }\"\r\n    >\r\n        <i :class=\"classes\" :style=\"style\"></i>\r\n    </span>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, computed, PropType, StyleValue } from 'vue'\r\n\r\n    export default defineComponent({\r\n        name: 'KIcon',\r\n        autoload: true,\r\n        props: {\r\n            icon: {\r\n                type: String as PropType<string>,\r\n                required: true,\r\n                description: 'Icono'\r\n            },\r\n            type: {\r\n                type: String as PropType<'fas' | 'fal' | 'fad' | 'far'>,\r\n                default: 'fad',\r\n                options: ['fas', 'fal', 'fad', 'far'],\r\n                control: 'inline-radio',\r\n                description: 'Tipo de icono'\r\n            },\r\n            size: {\r\n                type: Number,\r\n                default: 0,\r\n                description: 'Tamaño del icono'\r\n            },\r\n            spin: {\r\n                type: Boolean,\r\n                default: false,\r\n                description: 'Animación de rotación'\r\n            }\r\n        },\r\n        setup(props) {\r\n            const classes = computed(() => {\r\n                const aclass: any[] = ['k-icon']\r\n\r\n                aclass.push(props.type)\r\n                aclass.push(`fa-${props.icon}`)\r\n\r\n                if (props.spin) {\r\n                    aclass.push('fa-spin')\r\n                }\r\n\r\n                return aclass\r\n            })\r\n\r\n            const style = computed((): StyleValue => {\r\n                const style: StyleValue = {}\r\n\r\n                if (props.size > 0) {\r\n                    style['font-size'] = props.size + 'px'\r\n                }\r\n\r\n                return style\r\n            })\r\n\r\n            return { classes, style }\r\n        }\r\n    })\r\n</script>\r\n\r\n<style scoped>\r\n    .k-icon {\r\n        color: inherit;\r\n    }\r\n</style>\r\n"],"names":["_sfc_main","defineComponent","props","classes","computed","aclass","style","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","__name"],"mappings":"uOAeI,MAAAA,EAAeC,EAAgB,CAC3B,KAAM,QACN,SAAU,GACV,MAAO,CACH,KAAM,CACF,KAAM,OACN,SAAU,GACV,YAAa,OACjB,EACA,KAAM,CACF,KAAM,OACN,QAAS,MACT,QAAS,CAAC,MAAO,MAAO,MAAO,KAAK,EACpC,QAAS,eACT,YAAa,eACjB,EACA,KAAM,CACF,KAAM,OACN,QAAS,EACT,YAAa,qBACjB,EACA,KAAM,CACF,KAAM,QACN,QAAS,GACT,YAAa,6BACjB,CACJ,EACA,MAAMC,EAAO,CACH,MAAAC,EAAUC,EAAS,IAAM,CACrB,MAAAC,EAAgB,CAAC,QAAQ,EAExB,OAAAA,EAAA,KAAKH,EAAM,IAAI,EACfG,EAAA,KAAK,MAAMH,EAAM,MAAM,EAE1BA,EAAM,MACNG,EAAO,KAAK,SAAS,EAGlBA,CAAA,CACV,EAEKC,EAAQF,EAAS,IAAkB,CACrC,MAAME,EAAoB,CAAA,EAEtB,OAAAJ,EAAM,KAAO,IACbI,EAAM,aAAeJ,EAAM,KAAO,MAG/BI,CAAA,CACV,EAEM,MAAA,CAAE,QAAAH,EAAS,MAAAG,EACtB,CACJ,CAAC,wCC9DI,cAAA,SAAA,kBAAA,oBAEDC,EAAuCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CAAnC,OAAAC,EAAc,EAAAC,EAAA,OAAAC,EAAA,CAAAC,EAAQ,IAAE,CAAA,MAAAC,EAAAV,EAAA,OAAA,8BAA5BW,EAAAZ,EAAA"}